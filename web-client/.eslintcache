[{"/home/prashant/Projects/sdcoe-transcript/web-client/src/index.js":"1","/home/prashant/Projects/sdcoe-transcript/web-client/src/public.js":"2","/home/prashant/Projects/sdcoe-transcript/web-client/src/App.js":"3","/home/prashant/Projects/sdcoe-transcript/web-client/src/Router.js":"4","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/index.js":"5","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/index.js":"6","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/routes.js":"7","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Toast.js":"8","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Loading.js":"9","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/DropDown.js":"10","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Modal.js":"11","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GetStatus.js":"12","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GetActions.js":"13","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Table.js":"14","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GlobalFilter.js":"15","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/RequestSuccess.js":"16","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Nav.js":"17","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Footer.js":"18","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Header.js":"19","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/student/index.js":"20","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/staff/index.js":"21","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/index.js":"22","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/validate/index.js":"23","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/student/TranscriptRequest.js":"24","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/staff/RequestedTranscript.js":"25","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/RequestedTranscript.js":"26","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/TranscriptRequest.js":"27","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/validate/TranscriptValidate.js":"28","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/status.js":"29","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/requestDetails.js":"30","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/colors.js":"31","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/actions.js":"32","/home/prashant/Projects/sdcoe-transcript/web-client/src/assets/images.js":"33","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/formatDate.js":"34","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/transformText.js":"35","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/parseString.js":"36","/home/prashant/Projects/sdcoe-transcript/web-client/src/mappings/orderMapper.js":"37","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/validation.js":"38","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/data.js":"39","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/toast.js":"40","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/toast.js":"41","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/tableColumns.js":"42","/home/prashant/Projects/sdcoe-transcript/web-client/src/hooks/useForm.js":"43","/home/prashant/Projects/sdcoe-transcript/web-client/src/hooks/useDistrict.js":"44","/home/prashant/Projects/sdcoe-transcript/web-client/src/services/orders.js":"45","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/form/formValidation.js":"46","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/getTimeStamp.js":"47","/home/prashant/Projects/sdcoe-transcript/web-client/src/services/download.js":"48","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/generateYears.js":"49","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/encode.js":"50","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/isEmpty.js":"51","/home/prashant/Projects/sdcoe-transcript/web-client/src/services/district.js":"52","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/api.js":"53","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/validate.js":"54","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/http.js":"55","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/error.js":"56","/home/prashant/Projects/sdcoe-transcript/web-client/src/config.js":"57"},{"size":165,"mtime":1608179710747,"results":"58","hashOfConfig":"59"},{"size":55,"mtime":1608179710747,"results":"60","hashOfConfig":"59"},{"size":560,"mtime":1609831555591,"results":"61","hashOfConfig":"59"},{"size":1094,"mtime":1609831555591,"results":"62","hashOfConfig":"59"},{"size":426,"mtime":1609831555595,"results":"63","hashOfConfig":"59"},{"size":132,"mtime":1608179710743,"results":"64","hashOfConfig":"59"},{"size":385,"mtime":1609831555598,"results":"65","hashOfConfig":"59"},{"size":1576,"mtime":1609831555595,"results":"66","hashOfConfig":"59"},{"size":368,"mtime":1609831555595,"results":"67","hashOfConfig":"59"},{"size":855,"mtime":1608179710743,"results":"68","hashOfConfig":"59"},{"size":3011,"mtime":1610099037468,"results":"69","hashOfConfig":"59"},{"size":1017,"mtime":1609831555595,"results":"70","hashOfConfig":"59"},{"size":2341,"mtime":1609831555595,"results":"71","hashOfConfig":"59"},{"size":5956,"mtime":1610099037468,"results":"72","hashOfConfig":"59"},{"size":1249,"mtime":1608179710743,"results":"73","hashOfConfig":"59"},{"size":746,"mtime":1608179710743,"results":"74","hashOfConfig":"59"},{"size":1286,"mtime":1609831555595,"results":"75","hashOfConfig":"59"},{"size":698,"mtime":1608179710743,"results":"76","hashOfConfig":"59"},{"size":1339,"mtime":1608179710743,"results":"77","hashOfConfig":"59"},{"size":102,"mtime":1608179710743,"results":"78","hashOfConfig":"59"},{"size":66,"mtime":1609831555598,"results":"79","hashOfConfig":"59"},{"size":202,"mtime":1609831555595,"results":"80","hashOfConfig":"59"},{"size":91,"mtime":1608179710743,"results":"81","hashOfConfig":"59"},{"size":12271,"mtime":1609831555598,"results":"82","hashOfConfig":"59"},{"size":1956,"mtime":1609831555598,"results":"83","hashOfConfig":"59"},{"size":1967,"mtime":1609831555595,"results":"84","hashOfConfig":"59"},{"size":5598,"mtime":1609831555595,"results":"85","hashOfConfig":"59"},{"size":1228,"mtime":1608179710743,"results":"86","hashOfConfig":"59"},{"size":244,"mtime":1609831555598,"results":"87","hashOfConfig":"59"},{"size":1084,"mtime":1609831555598,"results":"88","hashOfConfig":"59"},{"size":306,"mtime":1609831555598,"results":"89","hashOfConfig":"59"},{"size":2320,"mtime":1609831555598,"results":"90","hashOfConfig":"59"},{"size":745,"mtime":1608179710737,"results":"91","hashOfConfig":"59"},{"size":557,"mtime":1609831555598,"results":"92","hashOfConfig":"59"},{"size":240,"mtime":1609831555601,"results":"93","hashOfConfig":"59"},{"size":67,"mtime":1610099037468,"results":"94","hashOfConfig":"59"},{"size":1498,"mtime":1610099037468,"results":"95","hashOfConfig":"59"},{"size":261,"mtime":1609831555598,"results":"96","hashOfConfig":"59"},{"size":2173,"mtime":1609831555598,"results":"97","hashOfConfig":"59"},{"size":1615,"mtime":1609831555601,"results":"98","hashOfConfig":"59"},{"size":560,"mtime":1609831555598,"results":"99","hashOfConfig":"59"},{"size":2740,"mtime":1609831555598,"results":"100","hashOfConfig":"59"},{"size":4533,"mtime":1609831555598,"results":"101","hashOfConfig":"59"},{"size":691,"mtime":1609831555598,"results":"102","hashOfConfig":"59"},{"size":1666,"mtime":1609831555598,"results":"103","hashOfConfig":"59"},{"size":4999,"mtime":1609831555595,"results":"104","hashOfConfig":"59"},{"size":75,"mtime":1609831555601,"results":"105","hashOfConfig":"59"},{"size":342,"mtime":1609831555598,"results":"106","hashOfConfig":"59"},{"size":305,"mtime":1609831555598,"results":"107","hashOfConfig":"59"},{"size":308,"mtime":1608179710747,"results":"108","hashOfConfig":"59"},{"size":193,"mtime":1609831555601,"results":"109","hashOfConfig":"59"},{"size":282,"mtime":1608179710747,"results":"110","hashOfConfig":"59"},{"size":122,"mtime":1608179710743,"results":"111","hashOfConfig":"59"},{"size":759,"mtime":1609831555601,"results":"112","hashOfConfig":"59"},{"size":3051,"mtime":1608179710747,"results":"113","hashOfConfig":"59"},{"size":1320,"mtime":1609831555598,"results":"114","hashOfConfig":"59"},{"size":179,"mtime":1608179710743,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"foxyg4",{"filePath":"119","messages":"120","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"118"},{"filePath":"122","messages":"123","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":6,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":9,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":7,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":7,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":12,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":6,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"118"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":26,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":14,"warningCount":0,"fixableErrorCount":14,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":17,"warningCount":0,"fixableErrorCount":16,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":19,"warningCount":0,"fixableErrorCount":19,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":2,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":1,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"246","messages":"247","errorCount":6,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"118"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"251","messages":"252","errorCount":4,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"118"},{"filePath":"254","messages":"255","errorCount":9,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"118"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/prashant/Projects/sdcoe-transcript/web-client/src/index.js",[],["261","262"],"/home/prashant/Projects/sdcoe-transcript/web-client/src/public.js",["263"],"//import style.scss\nimport './assets/sass/style.scss';\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/App.js",["264"],"import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { IconContext } from 'vyaguta-icons';\n\nimport { Toast } from 'components/common';\nimport { Header, Footer } from 'components/common/layout';\nimport AppRouter from 'Router';\n\nconst IconDefaultParams = {\n  size: '24px',\n};\n\nfunction App() {\n  return (\n    <IconContext.Provider value={IconDefaultParams}>\n      <Router>\n        <Header />\n        <AppRouter />\n        <Footer />\n      </Router>\n      <Toast />\n    </IconContext.Provider>\n  );\n}\n\nexport default App;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/Router.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/routes.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Toast.js",["265","266","267","268","269","270"],"import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { UiCheckCircle, UiExclamationCircle, UiTimesCircle } from 'vyaguta-icons/ui';\n\nconst ICON_SIZE = 20;\n\nconst CustomToast = ({ statusType, toastMessage }) => {\n  const toasts = {\n    success: {\n      className: 'success',\n      icon: <UiCheckCircle size={ICON_SIZE} />,\n    },\n    warning: {\n      className: 'warning',\n      icon: <UiExclamationCircle size={ICON_SIZE} />,\n    },\n    danger: {\n      className: 'danger',\n      icon: <UiTimesCircle size={ICON_SIZE} />,\n    },\n  };\n\n  const toast = toasts[statusType];\n\n  return (\n    <div>\n      {toast && toast !== undefined && (\n        <div className={`lf-toast lf-toast--${toast.className}`}>\n          <div className=\"lf-toast__icon\">{toast.icon}</div>\n          <div className=\"lf-toast__content\">\n            <span className=\"lf-toast__title\">{toastMessage.title}</span>\n            <p className=\"lf-toast__message\">{toastMessage.message}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const notify = props => {\n  const { type, message, autoClose, draggable } = props;\n  toast(<CustomToast statusType={type} toastMessage={message} />, {\n    autoClose: autoClose || 3000,\n    draggable: draggable || false,\n    closeButton: false,\n    progressClassName: 'lf-toast__progress-bar',\n    hideProgressBar: true,\n    newestOnTop: 'false',\n    rtl: false,\n  });\n};\n\nexport default function Toast() {\n  return <ToastContainer className=\"lf-toast__container\" />;\n}\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Loading.js",["271","272"],"import React from 'react';\n\nconst Loading = ({ message }) => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/DropDown.js",["273","274","275","276","277","278","279","280","281"],"import React from 'react';\nimport Select from 'react-select';\n\nimport { dropDown } from 'assets/images';\n\nconst DropDown = props => {\n  const { options, onChange, placeholder, name } = props;\n  return (\n    <Select\n      options={options}\n      placeholder={placeholder}\n      classNamePrefix=\"custom-select\"\n      className=\"form-control--select\"\n      name={name}\n      onChange={onChange}\n      components={{\n        IndicatorSeparator: () => null,\n        DropdownIndicator: () =>\n          props.isMulti || props.customDropdownIndicator ? '' : <img src={dropDown} alt=\"dropDown-img\" />,\n      }}\n      theme={theme => ({\n        ...theme,\n        borderRadius: 0,\n        colors: {\n          ...theme.colors,\n          primary25: '#ededed',\n          primary: '#d8d8d8',\n        },\n      })}\n      {...props}\n    />\n  );\n};\n\nexport default DropDown;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Modal.js",["282","283","284","285","286","287","288"],"import React from 'react';\n\nimport { formatDate } from 'utils/formatDate';\nimport { parseString } from 'utils/parseString';\nimport { textTransform } from 'utils/transformText';\n\nimport { orderMappings } from 'mappings/orderMapper';\nimport { REQUEST_DETAILS, DETAILS } from 'constants/requestDetails';\n\nconst Modal = ({ data, handleClick }) => {\n  const requestType = textTransform(data.requestedType, 'uppercase');\n  let requestDetails = REQUEST_DETAILS[requestType];\n  return (\n    <>\n      <div class=\"modal-backdrop fade show\"></div>\n      <div className=\"modal right fade show modal--sidebar\" id=\"StudentDetailsModal\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={handleClick}>\n                <span aria-hidden=\"true\">\n                  <svg width=\"33\" height=\"33\" viewBox=\"0 0 33 33\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                      d=\"M26.1248 8.81375L24.186 6.875L16.4998 14.5613L8.81351 6.875L6.87476 8.81375L14.561 16.5L6.87476 24.1863L8.81351 26.125L16.4998 18.4387L24.186 26.125L26.1248 24.1863L18.4385 16.5L26.1248 8.81375Z\"\n                      fill=\"#5A5A5A\"\n                    />\n                  </svg>\n                </span>\n              </button>\n              <h4 className=\"modal-title\">Request Details</h4>\n            </div>\n            <div className=\"modal-body\">\n              {requestDetails.map((value, index) => {\n                return (\n                  <div className=\"row\" key={index}>\n                    <div className=\"col-5\">\n                      <p className=\"key\">{DETAILS[value]}: </p>\n                    </div>\n                    {orderMappings.uploadSignatureFilename === value ? (\n                      <div className=\"col-7\">\n                        <p className=\"value link\">{data[value]}</p>\n                        <div className=\"image-wrapper mt-2\">\n                          <img src={data[orderMappings.signature]} alt=\"signature\" />\n                        </div>\n                      </div>\n                    ) : orderMappings.dob === value || orderMappings.requestDate === value ? (\n                      <div className=\"col-7\">\n                        <p className=\"value\">{formatDate(data[value])}</p>\n                      </div>\n                    ) : orderMappings.yearsAttended === value ? (\n                      <div className=\"col-7\">\n                        <p className=\"value\">{parseString(data[value]) || '-'}</p>\n                      </div>\n                    ) : (\n                      <div className=\"col-7\">\n                        <p className=\"value\">{data[value] || '-'}</p>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GetStatus.js",["289","290","291","292"],"import React from 'react';\n\nimport * as colors from 'constants/colors';\nimport { PENDING, APPROVED, DENIED, FAILED, PROCESSING, COMPLETED } from 'constants/status';\n\nconst GetStatus = ({ status }) => {\n  let color;\n  const value = status.toLowerCase();\n  switch (value) {\n    case APPROVED: {\n      color = colors.APPROVED;\n      break;\n    }\n    case PENDING: {\n      color = colors.PENDING;\n      break;\n    }\n    case DENIED: {\n      color = colors.DENIED;\n      break;\n    }\n    case FAILED: {\n      color = colors.FAILED;\n      break;\n    }\n    case PROCESSING: {\n      color = colors.PROCESSING;\n      break;\n    }\n    case COMPLETED: {\n      color = colors.COMPLETED;\n      break;\n    }\n\n    default:\n      color = colors.APPROVED;\n      break;\n  }\n  return (\n    <>\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill={color} xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"5\" cy=\"5\" r=\"5\" />\n      </svg>\n      <span className=\"ml-2\">{status}</span>\n    </>\n  );\n};\n\nexport default GetStatus;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GetActions.js",["293","294","295","296","297","298","299"],"import React from 'react';\n\nimport { textTransform } from 'utils/transformText';\nimport { ACTIONS, deny, view } from 'constants/actions';\n\nconst ActionList = props => {\n  const {\n    status,\n    row: {\n      original: { firstName, lastName, requestId },\n    },\n    role,\n    handleAction,\n    viewDetails,\n    row: { original },\n  } = props;\n  const id = requestId;\n  const studentName = textTransform(firstName + lastName, 'lowercase');\n  const userRole = textTransform(role, 'uppercase');\n  // TODO: Need to get the options based on user role ie. student or staff\n  const options = ACTIONS[userRole];\n  let status_key = textTransform(status, 'uppercase');\n\n  if (options[status_key]) {\n    return options[status_key].map((option, index) => {\n      if (option.title === view) {\n        return (\n          <button\n            className={`dropdown-item ${option.title === deny ? 'reject' : ''} `}\n            onClick={() => viewDetails(original)}\n            key={index}\n          >\n            {option.title}\n          </button>\n        );\n      }\n      return (\n        <button\n          className={`dropdown-item ${option.title === deny ? 'reject' : ''} `}\n          onClick={() => handleAction(id, option.callback, studentName)}\n          key={index}\n        >\n          {option.title}\n        </button>\n      );\n    });\n  }\n};\n\nconst GetActions = props => {\n  const { status } = props.status;\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"btn btn--secondary btn--action\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M6 10C4.9 10 4 10.9 4 12C4 13.1 4.9 14 6 14C7.1 14 8 13.1 8 12C8 10.9 7.1 10 6 10ZM18 10C16.9 10 16 10.9 16 12C16 13.1 16.9 14 18 14C19.1 14 20 13.1 20 12C20 10.9 19.1 10 18 10ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\"\n            fill=\"#0AB1F1\"\n          />\n        </svg>\n      </button>\n      <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n        <ActionList status={status} {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default GetActions;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/Table.js",["300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { useState, useEffect, useMemo } from 'react';\nimport { useTable, useFlexLayout, usePagination, useGlobalFilter } from 'react-table';\n\nimport { GlobalFilter, Loading } from 'components/common';\n\nconst SIZE_OPTIONS = [10, 20, 50, 100];\n\nconst Table = ({ columns, data, searchPlaceholder, title, isLoading }) => {\n  const getStyles = (props, align = 'left') => [\n    props,\n    {\n      style: {\n        justifyContent: align === 'right' ? 'flex-end' : 'flex-start',\n        alignItems: 'flex-start',\n        display: 'flex',\n      },\n    },\n  ];\n\n  const headerProps = (props, { column }) => getStyles(props, column.align);\n\n  const cellProps = (props, { cell }) => getStyles(props, cell.column.align);\n\n  const defaultColumn = useMemo(\n    () => ({\n      // When using the useFlexLayout:\n      minWidth: 30, // minWidth is only used as a limit for resizing\n      width: 150, // width is used for both the flex-basis and flex-grow\n      maxWidth: 200, // maxWidth is only used as a limit for resizing\n    }),\n    []\n  );\n\n  const memoizedColumns = useMemo(() => columns, [columns]);\n\n  const memoizedData = useMemo(() => data, [data]);\n\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state,\n    state: { pageIndex, pageSize },\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns: memoizedColumns,\n      data: memoizedData,\n      defaultColumn,\n      initialState: { pageIndex: 0 },\n    },\n    useFlexLayout,\n    useGlobalFilter,\n    usePagination\n  );\n\n  const { globalFilter } = state;\n  const [pageInput, setPageInput] = useState(1);\n  const onChangeInInput = ({ target: { value } }) => {\n    const page = value ? Number(value) - 1 : 0;\n    setPageInput(value);\n    gotoPage(page);\n  };\n\n  useEffect(() => {\n    setPageInput(pageIndex + 1);\n  }, [pageIndex]);\n\n  let isInputError = pageInput > (pageOptions.length || 2) || pageInput < 1;\n\n  return (\n    <>\n      <div className=\"heading\">\n        <h2>{title}</h2>\n        <GlobalFilter placeholder={searchPlaceholder} filter={globalFilter} setFilter={setGlobalFilter} />\n      </div>\n      <div className=\"lf-table\">\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"lf-table__head-row\">\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps(headerProps)} className=\"lf-table__col lf-table__col--head\">\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody className=\"lf-table__body\">\n            {isLoading ? (\n              <tr>\n                <td className=\"lf-table__no-data color--transparent\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : page.length ? (\n              page.map(row => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()} className=\"lf-table__row\">\n                    {row.cells.map(cell => {\n                      return (\n                        <td\n                          {...cell.getCellProps([\n                            {\n                              className: cell.column.className,\n                              style: cell.column.style,\n                            },\n                            cellProps,\n                          ])}\n                          className=\"lf-table__col\"\n                        >\n                          {cell.render('Cell')}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })\n            ) : (\n              <tr>\n                <td className=\"lf-table__no-data\">No data found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n        {\n          <div className=\"pagination lf-table__pagination\">\n            <span className=\"d-flex align-items-center\">\n              <span className=\"mr-2\">Rows Per Page</span>\n              <select\n                value={pageSize}\n                onChange={e => {\n                  setPageSize(Number(e.target.value));\n                }}\n                className=\"pagination-select custom-select-sm form-control form-control-sm\"\n              >\n                {SIZE_OPTIONS.map(pageSize => (\n                  <option key={pageSize} value={pageSize}>\n                    {pageSize}\n                  </option>\n                ))}\n              </select>\n            </span>\n\n            <span className=\"d-flex align-items-center\">\n              Page\n              <input\n                type=\"number\"\n                value={pageInput}\n                min={1}\n                max={pageOptions.length}\n                className={`ml-2 mr-2 form-control form-control-sm ${isInputError ? 'form-control--error' : ''}`}\n                onChange={onChangeInInput}\n                style={{ width: '60px' }}\n              />\n              of\n              <span className=\"ml-2\"> {pageOptions.length}</span>\n            </span>\n            <div className=\"lf-table__pagination--right d-flex justify-between\">\n              <button\n                className={`btn btn--primary btn--md mr-4 ${!canPreviousPage ? 'btn--disabled' : ''}`}\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n              >\n                Previous\n              </button>\n              <button\n                className={`btn btn--primary btn--md ${!canNextPage ? 'btn--disabled' : ''}`}\n                onClick={() => nextPage()}\n                disabled={!canNextPage}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        }\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/GlobalFilter.js",["312","313","314","315","316","317"],"import React, { useState } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\nconst GlobalFilter = ({ filter, setFilter, placeholder }) => {\n  const [value, setValue] = useState(filter);\n  const onChange = useAsyncDebounce(value => {\n    setFilter(value || undefined);\n  }, 1000);\n  return (\n    <div className=\"form-group search-form\">\n      <input\n        type=\"search\"\n        className=\"form-control\"\n        id=\"tableSearch\"\n        value={value || ''}\n        onChange={e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={placeholder}\n        aria-controls=\"transcript-table\"\n      />\n      <span className=\"icon search-icon\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M15.5 14H14.71L14.43 13.73C15.41 12.59 16 11.11 16 9.5C16 5.91 13.09 3 9.5 3C5.91 3 3 5.91 3 9.5C3 13.09 5.91 16 9.5 16C11.11 16 12.59 15.41 13.73 14.43L14 14.71V15.5L19 20.49L20.49 19L15.5 14ZM9.5 14C7.01 14 5 11.99 5 9.5C5 7.01 7.01 5 9.5 5C11.99 5 14 7.01 14 9.5C14 11.99 11.99 14 9.5 14Z\"\n            fill=\"#5A5A5A\"\n          />\n        </svg>\n      </span>\n    </div>\n  );\n};\nexport default GlobalFilter;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/RequestSuccess.js",["318"],"import React from 'react';\n\nimport { checkIcon } from 'assets/images';\n\nconst RequestSuccess = ({ onClick }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container pb-5\">\n        <div className=\"box-shadow request-success text-center\">\n          <img src={checkIcon} alt=\"success-icon\" />\n          <div className=\"message\">\n            <p className=\"message__heading\">Your request has been succesfully recorded.</p>\n            <p className=\"message__para\">We will get back to you soon.</p>\n          </div>\n          <button className=\"btn btn--secondary\" onClick={onClick}>\n            Request Another Transcript\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RequestSuccess;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Nav.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Footer.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/common/layout/Header.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/student/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/staff/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/validate/index.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/components/student/TranscriptRequest.js",["319","320"],"import React, { useState } from 'react';\nimport Input from 'react-phone-number-input/input';\n\nimport useForm from 'hooks/useForm';\nimport useDistrict from 'hooks/useDistrict';\n\nimport * as data from 'constants/data';\nimport { studentFields, orderMappings } from 'mappings/orderMapper';\n\nimport { validateAll, validateOnChange } from 'components/form/formValidation';\n\nimport { RequestSuccess } from 'components/common';\nimport { DropDown } from 'components/common';\n\nimport { requestTranscript } from 'services/orders';\nimport { DATE_LIMIT } from 'constants/validation';\n\nconst { typeOfTranscript, industrySectors, attendedYears } = data;\n\nconst TranscriptRequest = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  let values = {};\n  studentFields.forEach(field => {\n    if (field === orderMappings.signature) {\n      values = {\n        ...values,\n        [field]: {\n          [orderMappings.type]: '',\n          [orderMappings.size]: '',\n          [orderMappings.base64]: '',\n          [orderMappings.name]: '',\n        },\n      };\n    } else if (field === orderMappings.requestedType) {\n      values = {\n        ...values,\n        [field]: data.REQUEST_TYPE.student,\n      };\n    } else {\n      values = { ...values, [field]: '' };\n    }\n  });\n\n  const submit = async () => {\n    const response = await requestTranscript(formValues);\n    if (response) {\n      setIsSubmitted(true);\n    }\n  };\n\n  const { districtNames, cdsCode } = useDistrict();\n\n  const { handleChange, handleSubmit, handleMaskInput, formValues, errors, handleUploadFile } = useForm(\n    values,\n    submit,\n    cdsCode,\n    validateAll,\n    validateOnChange\n  );\n\n  if (isSubmitted) {\n    return <RequestSuccess onClick={() => setIsSubmitted(false)} />;\n  }\n\n  return (\n    <>\n      <section className=\"section student-trascript-section\">\n        <div className=\"container my-sm-5\">\n          <form\n            className=\"form student-transcript-form box-shadow\"\n            id=\"student-transcript-form\"\n            onSubmit={handleSubmit}\n            noValidate\n          >\n            <div className={`form-group form-group--required ${errors.typeOfTranscript ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"transcriptType\" className=\"form-group__label\">\n                Type of Transcript\n              </label>\n              <DropDown\n                options={typeOfTranscript}\n                placeholder=\"Select\"\n                name={orderMappings.typeOfTranscript}\n                onChange={handleChange}\n              />\n              {errors.typeOfTranscript && <small className=\"form-text-error\">{errors.typeOfTranscript}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.firstName ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"firstName\" className=\"form-group__label\">\n                First Name\n              </label>\n              <input\n                type=\"text\"\n                onChange={handleChange}\n                className=\"form-control\"\n                name={orderMappings.firstName}\n                value={formValues.firstName}\n                placeholder=\"For eg: John \"\n              />\n              {errors.firstName && <small className=\"form-text-error\">{errors.firstName}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.lastName ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"maidenName\" className=\"form-group__label\">\n                Last Name\n              </label>\n              <input\n                type=\"text\"\n                onChange={handleChange}\n                value={formValues.lastName}\n                className=\"form-control\"\n                placeholder=\"For eg: Doe \"\n                name={orderMappings.lastName}\n              />\n              {errors.lastName && <small className=\"form-text-error\">{errors.lastName}</small>}\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className={`form-group form-group--required ${errors.dob ? 'form-group--error' : ''}`}>\n                  <label htmlFor=\"dob\" className=\"form-group__label\">\n                    DOB\n                  </label>\n                  <input\n                    type=\"date\"\n                    onChange={handleChange}\n                    value={formValues.dob}\n                    className=\"form-control\"\n                    name={orderMappings.dob}\n                    max={DATE_LIMIT}\n                    required\n                  />\n                  {errors.dob && <small className=\"form-text-error\">{errors.dob}</small>}\n                </div>\n              </div>\n\n              <div className=\"col-sm-6\">\n                <div className={`form-group form-group--required ${errors.phoneNo ? 'form-group--error' : ''}`}>\n                  <label htmlFor=\"phone\" className=\"form-group__label\">\n                    Phone\n                  </label>\n                  <Input\n                    defaultCountry=\"US\"\n                    className=\"form-control\"\n                    value={formValues.phoneNo}\n                    placeholder=\"(XXX) XXX-XXXX\"\n                    refs={orderMappings.phoneNo}\n                    maxLength=\"14\"\n                    onChange={handleMaskInput}\n                  />\n                  {errors.phoneNo && <small className=\"form-text-error\">{errors.phoneNo}</small>}\n                </div>\n              </div>\n            </div>\n\n            <div className={`form-group form-group--required ${errors.address ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"address\" className=\"form-group__label\">\n                Address\n              </label>\n              <textarea\n                className=\"form-control\"\n                name={orderMappings.address}\n                value={formValues.address}\n                onChange={handleChange}\n                rows=\"4\"\n              ></textarea>\n              {errors.address && <small className=\"form-text-error\">{errors.address}</small>}\n            </div>\n\n            {/* only show when transcript type is ROP  */}\n            {formValues.typeOfTranscript && formValues.typeOfTranscript === 'rop pdf' && (\n              <div\n                className={`form-group form-group--required   ${errors.industrySectors ? 'form-group--error' : ''}`}\n                id=\"industrySelectGroup\"\n              >\n                <label htmlFor=\"industry-select\" className=\"form-group__label\">\n                  Industry Sectors\n                </label>\n                <DropDown\n                  closeMenuOnSelect={false}\n                  name={orderMappings.industrySectors}\n                  isMulti\n                  placeholder=\"Search or select from the list multiple industry sectors\"\n                  options={industrySectors}\n                  onChange={handleChange}\n                  className=\"choosen-multi-select\"\n                />\n\n                {errors.industrySectors && <small className=\"form-text-error\">{errors.industrySectors}</small>}\n              </div>\n            )}\n\n            <div className={`form-group form-group--required ${errors.classDescription ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"classNameesDesc\" className=\"form-group__label\">\n                Classes Description\n              </label>\n              <textarea\n                className=\"form-control\"\n                onChange={handleChange}\n                value={formValues.classDescription}\n                name={orderMappings.classDescription}\n                rows=\"4\"\n              ></textarea>\n              {errors.classDescription && <small className=\"form-text-error\">{errors.classDescription}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.yearsAttended ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"yearsAttended\" className=\"form-group__label\">\n                Year(s) Attended\n              </label>\n\n              <DropDown\n                closeMenuOnSelect={false}\n                name={orderMappings.yearsAttended}\n                isMulti\n                placeholder=\"For eg: 2001, 2002\"\n                options={attendedYears}\n                onChange={handleChange}\n                className=\"choosen-multi-select\"\n              />\n              {errors.yearsAttended && <small className=\"form-text-error\">{errors.yearsAttended}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.districtName ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"districtName\" className=\"form-group__label\">\n                District Name\n              </label>\n              <DropDown\n                options={districtNames}\n                placeholder=\"Select\"\n                name={orderMappings.districtName}\n                onChange={handleChange}\n              />\n              {errors.districtName && <small className=\"form-text-error\">{errors.districtName}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.releaseToName ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"releaseToName\" className=\"form-group__label\">\n                Release to Name\n              </label>\n              <input\n                type=\"text\"\n                onChange={handleChange}\n                className=\"form-control\"\n                name={orderMappings.releaseToName}\n                placeholder=\"For eg: John Doe\"\n                value={formValues.releaseToName}\n              />\n              {errors.releaseToName && <small className=\"form-text-error\">{errors.releaseToName}</small>}\n            </div>\n\n            <div className={`form-group form-group--required ${errors.releaseToEmail ? 'form-group--error' : ''}`}>\n              <label htmlFor=\"releaseEmail\" className=\"form-group__label\">\n                Release to Email\n              </label>\n              <input\n                type=\"email\"\n                onChange={handleChange}\n                className=\"form-control\"\n                name={orderMappings.releaseToEmail}\n                placeholder=\"For eg: john@example.com\"\n                value={formValues.releaseToEmail}\n              />\n              {errors.releaseToEmail && (\n                <small className=\"form-text-error\">\n                  {errors.releaseToEmail.empty || errors.releaseToEmail.invalid || errors.releaseToEmail}\n                </small>\n              )}\n            </div>\n            <div className={`form-group form-group--required ${errors.signature ? 'form-group--error' : ''}`}>\n              <div className=\"form-group__label mb-2\">Signature File Upload *</div>\n              <small className=\"form-text mt-0 mb-2\">jpg or png file under 100 kb are accepeted</small>\n              <div className=\"custom-file\" id=\"customFile\">\n                <input\n                  type=\"file\"\n                  name={orderMappings.signature}\n                  className=\"custom-file-input\"\n                  id=\"signatureFile\"\n                  onChange={handleUploadFile}\n                  accept=\".jpg, .jpeg, .png\"\n                  title={formValues.signature.name || ''}\n                />\n                <label className=\"custom-file-label form-control\" htmlFor=\"signatureFile\" data-browse=\"\">\n                  {formValues.signature && formValues.signature.name\n                    ? formValues.signature.name\n                    : ' Select a file to upload'}\n                </label>\n              </div>\n              {errors.signature && (\n                <small className=\"form-text-error\">\n                  {errors.signature.empty || errors.signature.invalid || errors.signature}\n                </small>\n              )}\n            </div>\n\n            {formValues.signature && formValues.signature.base64 && (\n              <div className=\"form-group\">\n                <img src={formValues.signature.base64} alt=\"signature\" width={100} height={100} />\n              </div>\n            )}\n\n            <button type=\"submit\" className=\"btn btn--primary\" id=\"request\">\n              Request Certificate\n            </button>\n          </form>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default TranscriptRequest;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/staff/RequestedTranscript.js",["321","322"],"import React, { useState, useEffect } from 'react';\nimport findKey from 'lodash/findKey';\n\nimport * as notify from 'utils/toast';\nimport { Table, Modal } from 'components/common';\n\nimport { TOAST_MESSAGES } from 'constants/toast';\nimport { staffRequestedTranscript } from 'constants/tableColumns';\n\nimport { getRequestedOrders } from 'services/orders';\n\nexport const RequestedTranscriptStaff = () => {\n  const [details, setDetails] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, isSetLoading] = useState(true);\n  const [changeStatus, setChangeStatus] = useState(false);\n\n  useEffect(() => {\n    const getTabledata = async () => {\n      const requestedOrder = await getRequestedOrders();\n      setTableData(requestedOrder);\n      isSetLoading(false);\n    };\n    getTabledata();\n  }, []);\n\n  const handleAction = async (id, callback, ...rest) => {\n    try {\n      const res = await callback(id, ...rest);\n      const { message, data, isDownload, title } = res;\n\n      if (data) {\n        tableData[findKey(tableData, { requestId: id })].status = data;\n        notify.toast(data, message);\n        setChangeStatus(!changeStatus);\n      }\n\n      if (isDownload) {\n        notify.success({ title, message });\n      }\n    } catch (err) {\n      notify.error({ title: TOAST_MESSAGES.noOption.title, message: TOAST_MESSAGES.noOption.message });\n    }\n  };\n\n  const viewDetails = data => {\n    setDetails(data);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <section className=\"section\">\n      <div className=\"container pb-5\">\n        <Table\n          columns={staffRequestedTranscript({ handleAction, viewDetails })}\n          data={tableData}\n          title=\"Requested Transcript\"\n          searchPlaceholder=\"Search by keywords\"\n          isLoading={isLoading}\n        />\n      </div>\n      {isOpen && <Modal handleClick={viewDetails} data={details} />}\n    </section>\n  );\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/RequestedTranscript.js",["323","324"],"import React, { useState, useEffect } from 'react';\nimport findKey from 'lodash/findKey';\n\nimport { Table, Modal } from 'components/common';\n\nimport * as notify from 'utils/toast';\nimport { TOAST_MESSAGES } from 'constants/toast';\nimport { distritctRequestedTranscript } from 'constants/tableColumns';\n\nimport { getRequestedOrders } from 'services/orders';\n\nexport const RequestedTranscriptDistrict = () => {\n  const [details, setDetails] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, isSetLoading] = useState(true);\n  const [changeStatus, setChangeStatus] = useState(false);\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    const getTabledata = async () => {\n      const requestedOrder = await getRequestedOrders();\n      setTableData(requestedOrder);\n      isSetLoading(false);\n    };\n    getTabledata();\n  }, []);\n\n  const handleAction = async (id, callback, ...rest) => {\n    try {\n      const res = await callback(id, ...rest);\n      const { message, data, isDownload, title } = res;\n\n      if (data) {\n        tableData[findKey(tableData, { requestId: id })].status = data;\n        notify.toast(data, message);\n        setChangeStatus(!changeStatus);\n      }\n\n      if (isDownload) {\n        notify.success({ title, message });\n      }\n    } catch (err) {\n      notify.error({ title: TOAST_MESSAGES.noOption.title, message: TOAST_MESSAGES.noOption.message });\n    }\n  };\n\n  const viewDetails = data => {\n    setDetails(data);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <section className=\"section\">\n      <div className=\"container pb-5\">\n        <Table\n          columns={distritctRequestedTranscript({ handleAction, viewDetails })}\n          data={tableData}\n          title=\"Requested Transcript\"\n          searchPlaceholder=\"Search by keywords\"\n          isLoading={isLoading}\n        />\n      </div>\n      {isOpen && <Modal handleClick={viewDetails} data={details} />}\n    </section>\n  );\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/district/TranscriptRequest.js",["325","326","327","328"],"import React, { useState } from 'react';\n\nimport useForm from 'hooks/useForm';\nimport useDistrict from 'hooks/useDistrict';\n\nimport * as data from 'constants/data';\nimport { districtFields, orderMappings } from 'mappings/orderMapper';\n\nimport { validateAll, validateOnChange } from 'components/form/formValidation';\n\nimport { RequestSuccess, DropDown } from 'components/common';\n\nimport { requestTranscript } from 'services/orders';\nimport { DATE_LIMIT } from 'constants/validation';\n\nconst { typeOfTranscriptForDistrict } = data;\n\nconst TranscriptRequest = () => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  let values = {};\n  districtFields.forEach(field => {\n    if (field === orderMappings.requestedType) {\n      values = { ...values, [field]: data.REQUEST_TYPE.district };\n    } else {\n      values = { ...values, [field]: '' };\n    }\n  });\n\n  const submit = async () => {\n    const response = await requestTranscript(formValues);\n    if (response) {\n      setIsSubmitted(true);\n    }\n  };\n\n  const { districtNames, cdsCode } = useDistrict();\n\n  const { handleChange, handleSubmit, formValues, errors } = useForm(\n    values,\n    submit,\n    cdsCode,\n    validateAll,\n    validateOnChange\n  );\n\n  if (isSubmitted) {\n    return <RequestSuccess onClick={() => setIsSubmitted(false)} />;\n  }\n\n  return (\n    <section className=\"section student-trascript-section\">\n      <div className=\"container my-sm-5\">\n        <form\n          className=\"form student-transcript-form box-shadow\"\n          id=\"student-transcript-form\"\n          onSubmit={handleSubmit}\n          noValidate\n        >\n          <div className={`form-group form-group--required ${errors.typeOfTranscript ? 'form-group--error' : ''}`}>\n            <label htmlFor=\"transcriptType\" className=\"form-group__label\">\n              Type of Transcript\n            </label>\n            <DropDown\n              options={typeOfTranscriptForDistrict}\n              placeholder=\"Select\"\n              name={orderMappings.typeOfTranscript}\n              onChange={handleChange}\n            />\n            {errors.typeOfTranscript && <small className=\"form-text-error\">{errors.typeOfTranscript}</small>}\n          </div>\n\n          <div className={`form-group form-group--required ${errors.districtStudentSSID ? 'form-group--error' : ''}`}>\n            <label htmlFor=\"districtStudentSSID\" className=\"form-group__label\">\n              District Student SSID\n            </label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              className=\"form-control\"\n              name={orderMappings.districtStudentSSID}\n              value={formValues.districtStudentSSID}\n              placeholder=\"For eg: 12345\"\n            />\n            {errors.districtStudentSSID && <small className=\"form-text-error\">{errors.districtStudentSSID}</small>}\n          </div>\n\n          <div className={`form-group form-group--required ${errors.firstName ? 'form-group--error' : ''}`}>\n            <label htmlFor=\"firstName\" className=\"form-group__label\">\n              Student's First Name\n            </label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              className=\"form-control\"\n              name={orderMappings.firstName}\n              value={formValues.firstName}\n              placeholder=\"For eg: John\"\n            />\n            {errors.firstName && <small className=\"form-text-error\">{errors.firstName}</small>}\n          </div>\n\n          <div className={`form-group form-group--required ${errors.lastName ? 'form-group--error' : ''}`}>\n            <label htmlFor=\"maidenName\" className=\"form-group__label\">\n              Student's Last Name\n            </label>\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              value={formValues.lastName}\n              placeholder=\"For eg: Doe\"\n              className=\"form-control\"\n              name={orderMappings.lastName}\n            />\n            {errors.lastName && <small className=\"form-text-error\">{errors.lastName}</small>}\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <div className={`form-group form-group--required ${errors.dob ? 'form-group--error' : ''}`}>\n                <label htmlFor=\"dob\" className=\"form-group__label\">\n                  DOB\n                </label>\n                <input\n                  type=\"date\"\n                  onChange={handleChange}\n                  value={formValues.dob}\n                  className=\"form-control\"\n                  name={orderMappings.dob}\n                  max={DATE_LIMIT}\n                  required\n                />\n                {errors.dob && <small className=\"form-text-error\">{errors.dob}</small>}\n              </div>\n            </div>\n          </div>\n\n          <div className={`form-group form-group--required ${errors.districtName ? 'form-group--error' : ''}`}>\n            <label htmlFor=\"districtName\" className=\"form-group__label\">\n              District Name\n            </label>\n            <DropDown\n              options={districtNames}\n              placeholder=\"Select\"\n              name={orderMappings.districtName}\n              onChange={handleChange}\n            />\n            {errors.districtName && <small className=\"form-text-error\">{errors.districtName}</small>}\n          </div>\n\n          <button type=\"submit\" className=\"btn btn--primary\" id=\"request\">\n            Request Certificate\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default TranscriptRequest;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/validate/TranscriptValidate.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/status.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/requestDetails.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/colors.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/actions.js",["329"],"import { TOAST_MESSAGES } from 'constants/toast';\nimport { getTimeStamp } from 'utils/getTimeStamp';\nimport { APPROVED, DENIED } from 'constants/status';\n\nimport { downloadTranscript } from 'services/download';\nimport { approveStatus, denyRequest, resendTranscript } from 'services/orders';\n\nexport const view = 'View Details';\nexport const approve = 'Approve Request';\nexport const deny = 'Deny Request';\nexport const resend = 'Resend Transcript';\nexport const download = 'Download Transcript';\n\nexport const VIEW_DETAILS = {\n  title: view,\n};\nexport const APPROVE_REQUEST = {\n  title: approve,\n  callback: async id => {\n    const res = await approveStatus(APPROVED, id);\n\n    return { message: res, data: APPROVED };\n  },\n};\nexport const DENY_REQUEST = {\n  title: deny,\n  callback: async id => {\n    const res = await denyRequest(DENIED, id);\n\n    return { message: res, data: DENIED };\n  },\n};\nexport const RESEND_TRANSCRIPT = {\n  title: resend,\n  callback: async id => {\n    const res = await resendTranscript(APPROVED, id);\n\n    return { message: res, data: APPROVED };\n  },\n};\nexport const DOWNLOAD_TRANSCRIPT = {\n  title: download,\n  callback: async (id, studentName) => {\n    const res = await downloadTranscript(id);\n    const url = window.URL.createObjectURL(new Blob([res]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = '';\n    link.setAttribute('download', `${studentName}_${getTimeStamp()}.pdf`);\n    link.rel = 'noopener noreferrer';\n    link.target = '_blank';\n    document.body.appendChild(link);\n    link.click();\n\n    return { title: TOAST_MESSAGES.download.title, message: TOAST_MESSAGES.download.message, isDownload: true };\n  },\n};\n\nexport const ACTIONS = [];\n\nACTIONS['STAFF'] = {\n  PROCESSING: [VIEW_DETAILS],\n  DENIED: [APPROVE_REQUEST, VIEW_DETAILS],\n  FAILED: [RESEND_TRANSCRIPT, VIEW_DETAILS],\n  APPROVED: [DENY_REQUEST, VIEW_DETAILS],\n  RESEND: [APPROVE_REQUEST, VIEW_DETAILS],\n  PENDING: [APPROVE_REQUEST, DENY_REQUEST, VIEW_DETAILS],\n  COMPLETED: [DOWNLOAD_TRANSCRIPT, RESEND_TRANSCRIPT, VIEW_DETAILS],\n};\n\nACTIONS['DISTRICT'] = {\n  PROCESSING: [VIEW_DETAILS],\n  APPROVED: [VIEW_DETAILS],\n  PENDING: [VIEW_DETAILS],\n  DENIED: [VIEW_DETAILS],\n  RESEND: [VIEW_DETAILS],\n  FAILED: [VIEW_DETAILS],\n  COMPLETED: [DOWNLOAD_TRANSCRIPT, VIEW_DETAILS],\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/assets/images.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/formatDate.js",["330","331","332","333","334","335"],"export const formatDate = (datetime, separator = '/') => {\n  let date = new Date(datetime).toISOString().slice(0, 10);\n  let newDate = new Date(date);\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  let year = newDate.getFullYear();\n  day = formatBelowTen(day);\n  month = formatBelowTen(month);\n  if (separator === '-') {\n    return `${year}-${month}-${day}`;\n  }\n  return `${month}${separator}${day}${separator}${year}`;\n};\n\nexport const formatBelowTen = value => {\n  if (value < 10) {\n    return `0${value}`;\n  }\n  return value;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/transformText.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/parseString.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/mappings/orderMapper.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/validation.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/data.js",["336","337"],"import { generateYears } from 'utils/generateYears';\n\nexport const PDF_TYPES = {\n  standardPDF: {\n    label: 'Standard PDF',\n    value: 'standard pdf',\n  },\n  ropPDF: {\n    label: 'ROP PDF',\n    value: 'rop pdf',\n  },\n  jsonPDF: {\n    label: 'JSON2',\n    value: 'json2',\n  },\n};\n\nexport const REQUEST_TYPE = { student: 'student', district: 'district' };\n\nexport const typeOfTranscript = [PDF_TYPES.ropPDF, PDF_TYPES.standardPDF];\n\nexport const typeOfTranscriptForDistrict = [PDF_TYPES.ropPDF, PDF_TYPES.standardPDF, PDF_TYPES.jsonPDF];\n\nexport const industrySectors = [\n  { label: 'Agriculture and Natural Resources Arts', value: 'Agriculture and Natural Resources' },\n  { label: 'Arts, Media, and Entertainment', value: 'Arts, Media, and Entertainment' },\n  { label: 'Building and Construction Trades', value: 'Building and Construction Trades' },\n  { label: 'Business and Finance', value: 'Business and Finance' },\n  {\n    label: 'Education, Child Development, and Family Services',\n    value: 'Education, Child Development, and Family Services',\n  },\n  { label: 'Energy, Environment, and Utilities', value: 'Energy, Environment, and Utilities' },\n  { label: 'Engineering and Architecture', value: 'Engineering and Architecture' },\n  { label: 'Fashion and Interior Design', value: 'Fashion and Interior Design' },\n  { label: 'Health Science and Medical Technology', value: 'Health Science and Medical Technology' },\n  { label: 'Hospitality, Tourism, and Recreation', value: 'Hospitality, Tourism, and Recreation' },\n  { label: 'Information and Communication Technology', value: 'Information and Communication Technology' },\n  { label: 'Manufacturing and Product Development', value: 'Manufacturing and Product Development' },\n  { label: 'Marketing, Sales, and Service', value: 'Marketing, Sales, and Service' },\n  { label: 'Public Services', value: 'Public Services' },\n  { label: 'Transportation', value: 'Transportation' },\n];\n\nconst generateAttendedYears = () => {\n  let attendedYears = [];\n  attendedYears = generateYears().map(year => {\n    return { label: year, value: year };\n  });\n  return attendedYears;\n};\n\nexport const attendedYears = generateAttendedYears();\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/toast.js",["338","339","340","341"],"// Use a Toast Library\n\nimport { notify } from 'components/common/Toast';\n\nimport { APPROVED, DENIED, RESEND, FAILED, PROCESSING, COMPLETED } from 'constants/status';\nimport { TOAST_MESSAGES } from 'constants/toast';\n\nexport function toast(data, message) {\n  switch (data) {\n    case APPROVED: {\n      success({ title: TOAST_MESSAGES.success.title, message: message || TOAST_MESSAGES.success.message });\n      break;\n    }\n    case DENIED: {\n      error({ title: TOAST_MESSAGES.error.title, message: message || TOAST_MESSAGES.error.message });\n      break;\n    }\n    case RESEND: {\n      success({ title: TOAST_MESSAGES.success.title, message: message || TOAST_MESSAGES.success.message });\n      break;\n    }\n    case FAILED: {\n      success({ title: TOAST_MESSAGES.success.title, message: message || TOAST_MESSAGES.success.message });\n      break;\n    }\n    case COMPLETED: {\n      success({ title: TOAST_MESSAGES.success.title, message: message || TOAST_MESSAGES.success.message });\n      break;\n    }\n    case PROCESSING: {\n      success({ title: TOAST_MESSAGES.success.title, message: message || TOAST_MESSAGES.success.message });\n      break;\n    }\n    default: {\n      error({ title: TOAST_MESSAGES.noOption.title, message: TOAST_MESSAGES.noOption.message });\n      break;\n    }\n  }\n}\n\nexport function success({ title, message }) {\n  notify({ type: 'success', message: { title, message } });\n}\n\nexport function error({ title, message }) {\n  notify({ type: 'danger', message: { title, message } });\n}\n\nexport function warning({ title, message }) {\n  notify({ type: 'warning', message: { title, message } });\n}\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/toast.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/tableColumns.js",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"import React from 'react';\n\nimport { formatDate } from 'utils/formatDate';\nimport { GetActions, GetStatus } from 'components/common';\n\n/*\n  Prepare  Columns and Data for tables\n*/\n\nexport const distritctRequestedTranscript = ({ handleAction, viewDetails }) => [\n  {\n    Header: 'Student SSID',\n    accessor: 'districtStudentSSID', // accessor is the \"key\" in the data\n  },\n  {\n    Header: 'Student Name',\n    accessor: props => `${props.firstName} ${props.lastName}`,\n    style: {\n      fontWeight: '600',\n    },\n    Cell: ({ value, row: { original } }) =>\n      value ? (\n        <button className=\"btn--link text-semibold\" onClick={() => viewDetails(original)}>\n          {value}\n        </button>\n      ) : (\n        <p className=\"text-center\">--</p>\n      ),\n  },\n  {\n    Header: 'Format',\n    accessor: 'typeOfTranscript',\n    style: {\n      textTransform: 'uppercase',\n    },\n  },\n  {\n    Header: 'Requested Date',\n    accessor: 'requestDate',\n    Cell: props => formatDate(props.value) || <p className=\"text-center\">--</p>,\n  },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    Cell: props => <GetStatus status={props.value} />,\n  },\n  {\n    Header: 'Actions',\n    accessor: 'actions',\n    Cell: props => (\n      <GetActions\n        status={props.row.values.status}\n        handleAction={handleAction}\n        viewDetails={viewDetails}\n        {...props}\n        role={'district'}\n      />\n    ),\n  },\n];\n\nexport const staffRequestedTranscript = ({ handleAction, viewDetails }) => [\n  {\n    Header: 'Requested By',\n    accessor: 'requestedBy',\n    style: {\n      fontWeight: '600',\n    },\n    Cell: ({ value, row: { original } }) =>\n      value ? (\n        <button className=\"btn--link text-semibold\" onClick={() => viewDetails(original)}>\n          {value}\n        </button>\n      ) : (\n        <p className=\"text-center\">--</p>\n      ),\n  },\n  {\n    Header: 'Requested type',\n    accessor: 'requestedType',\n  },\n  {\n    Header: 'Student Name',\n    accessor: props => `${props.firstName} ${props.lastName}`,\n  },\n\n  {\n    Header: 'Format',\n    accessor: 'typeOfTranscript',\n    Cell: props => props.value || <p className=\"text-center\">--</p>,\n    style: {\n      textTransform: 'uppercase',\n    },\n  },\n  {\n    Header: 'Requested Date',\n    accessor: 'requestDate',\n    Cell: props => formatDate(props.value) || <p className=\"text-center\">--</p>,\n  },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    Cell: props => <GetStatus status={props.value} />,\n  },\n  {\n    Header: 'Actions',\n    accessor: 'actions',\n    Cell: props => (\n      <GetActions\n        status={props.row.values.status}\n        handleAction={handleAction}\n        viewDetails={viewDetails}\n        {...props}\n        role=\"staff\"\n      />\n    ),\n  },\n];\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/hooks/useForm.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381"],"import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport omitBy from 'lodash/omitBy';\n\nimport { orderMappings } from 'mappings/orderMapper';\nimport { REQUEST_TYPE, PDF_TYPES } from 'constants/data';\n\nimport { checkEmpty } from 'utils/isEmpty';\nimport { convertBase64 } from 'utils/encode';\n\nconst useForm = (values = {}, submit, cdsCode = {}, validateAll, validateOnChange) => {\n  const [formValues, setFormValues] = useState(values);\n  const [errors, setErrors] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n\n  const handleChange = (event, action) => {\n    // check if the input is dropdown & multiselect\n    if (action && event !== null) {\n      const { name } = action;\n      const { value } = event;\n      if (Array.isArray(event)) {\n        const value = event.map(e => e.value);\n        const formData = {\n          ...formValues,\n          [name]: value,\n        };\n        setFormValues(formData);\n        setErrors(validateOnChange(name, formData, errors));\n        return;\n      }\n\n      const formData = {\n        ...formValues,\n        [name]: value,\n      };\n\n      setFormValues(formData);\n      setErrors(validateOnChange(name, formData, errors));\n      return;\n    }\n\n    if (action && event === null) {\n      const { name } = action;\n      const formData = {\n        ...formValues,\n        [name]: '',\n      };\n      setFormValues(formData);\n      setErrors(validateOnChange(name, formData, errors));\n      return;\n    }\n\n    const { name, value } = event.target;\n    const formData = {\n      ...formValues,\n      [name]: value,\n    };\n\n    setFormValues(formData);\n    setErrors(validateOnChange(name, formData, errors));\n  };\n\n  const handleMaskInput = value => {\n    const formData = {\n      ...formValues,\n      phoneNo: value,\n    };\n\n    setFormValues(formData);\n    setErrors(validateOnChange(orderMappings.phoneNo, formData, errors));\n  };\n\n  const handleUploadFile = async event => {\n    const imageFile = event.target.files[0];\n    const size = imageFile.size;\n    const type = imageFile.type;\n    const name = imageFile.name;\n    let base64 = await convertBase64(imageFile);\n    const formData = {\n      ...formValues,\n      signature: {\n        size,\n        type,\n        base64,\n        name,\n      },\n    };\n\n    const checkErrors = validateOnChange(orderMappings.signature, formData, errors);\n\n    setErrors(checkErrors);\n    let values = formData;\n    if (checkErrors.signature !== '') {\n      values.signature = {\n        size: '',\n        type: '',\n        base64: '',\n        name: '',\n      };\n    }\n    setFormValues(values);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let values = formValues;\n\n    // Remove or add industrySectors based on transcript type\n    if (formValues[orderMappings.requestedType] === REQUEST_TYPE.student) {\n      if (formValues[orderMappings.typeOfTranscript] === PDF_TYPES.standardPDF.value) {\n        values = omitBy(formValues, (value, key) => key === orderMappings.industrySectors);\n      } else {\n        values = { ...formValues, industrySectors: formValues[orderMappings.industrySectors] || '' };\n      }\n    }\n\n    // Add cds value based on the district value\n    const districtName = formValues[orderMappings.districtName];\n    if (Object.keys(cdsCode).includes(districtName)) {\n      values = { ...values, CDScode: cdsCode[districtName] };\n    }\n\n    const errorValues = validateAll(values, errors);\n    //Send signature value  base64  only\n    if (Object.keys(formValues).includes(orderMappings.signature) && checkEmpty(errorValues)) {\n      const signature = formValues[orderMappings.signature].base64;\n      values = { ...values, signature };\n    }\n\n    if (values[orderMappings.requestedType] === REQUEST_TYPE.student) {\n      const requestedBy = `${values[orderMappings.firstName]} ${values[orderMappings.lastName]}`;\n      values = { ...values, requestedBy };\n    }\n\n    setFormValues(values);\n    setErrors(errorValues);\n\n    if (Object.keys(errorValues).filter(key => errorValues[key]).length === 0) {\n      setSubmitting(true);\n    }\n  };\n\n  useEffect(() => {\n    if (submitting) {\n      submit();\n      setSubmitting(false);\n    }\n  }, [submitting, submit]);\n\n  return {\n    handleChange,\n    handleMaskInput,\n    handleSubmit,\n    handleUploadFile,\n    formValues,\n    errors,\n  };\n};\n\nuseForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  validateAll: PropTypes.func.isRequired,\n  validateOnChange: PropTypes.func.isRequired,\n};\n\nexport default useForm;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/hooks/useDistrict.js",["382","383","384","385"],"import { useState, useEffect } from 'react';\n\nimport { getDistricts } from 'services/district';\n\nconst useDistrict = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getDistirctNames = async () => {\n      const data = await getDistricts();\n      setData(data);\n    };\n    getDistirctNames();\n  }, []);\n  let districtNames = [];\n  let cdsCode = {};\n  data.messages &&\n    data.messages.forEach(value => {\n      districtNames = [...districtNames, { label: value.districtName, value: value.districtName }];\n      cdsCode = { ...cdsCode, [value.districtName]: value.CDSCode };\n    });\n\n  return {\n    districtNames,\n    cdsCode,\n  };\n};\n\nexport default useDistrict;\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/services/orders.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402"],"import http from 'utils/http';\nimport { endpoints } from 'constants/api';\n\n/**\n * request a transcript by student\n * @param  {object} data => form data\n * @returns {promise} => transcript order response\n */\nexport const requestTranscript = async data => {\n  const url = endpoints.orders;\n\n  return await http.post(url, { body: data });\n};\n\n/**\n * get all the requested transcript list\n * @return {string} response message\n */\nexport const getRequestedOrders = async () => {\n  const url = endpoints.orders;\n  const data = await http.get(url);\n\n  return data.messages;\n};\n/**\n * @param  {status} status => value of the status field\n * @param  {id} id  => id of the field\n * @return {string} =>  response message\n */\nexport const approveStatus = async (status, id) => {\n  const url = `${endpoints.orders}/${id}`;\n  let data = {\n    status: `${status}`,\n  };\n  const res = await http.put(url, { body: data });\n\n  return res.messages;\n};\n\n/**\n * @param {status} status => value of the status field\n * @param  {id} id => id of the field\n * @return {string} => Request deny response\n */\nexport const denyRequest = async (status, id) => {\n  const url = `${endpoints.orders}/${id}`;\n  let data = {\n    status: `${status}`,\n  };\n  const res = await http.put(url, { body: data });\n\n  return res.messages;\n};\n\n/**\n * @param {status} status => value of the status field\n * @param  {id} id => id of the field\n * @return {string} => Request deny response\n */\nexport const resendTranscript = async (status, id) => {\n  const url = `${endpoints.orders}/${id}`;\n  let data = {\n    status: `${status}`,\n  };\n  const res = await http.put(url, { body: data });\n\n  return res.messages;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/components/form/formValidation.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421"],"import omitBy from 'lodash/omitBy';\nimport { isValidPhoneNumber, isPossiblePhoneNumber } from 'react-phone-number-input';\n\nimport { validInputLength, validEmail, validImageType, validFileSize } from 'utils/validate';\n\nimport { errorMessages } from 'constants/error';\nimport { orderMappings } from 'mappings/orderMapper';\nimport { PDF_TYPES } from 'constants/data';\n\nexport const validateOnChange = (key, values, errors) => {\n  let errorValues = errors;\n  let error = validateField(key, values);\n  if (values[key] === PDF_TYPES.standardPDF.value) {\n    errorValues = omitBy(errors, (value, key) => key === orderMappings.industrySectors);\n  }\n  return { ...errorValues, ...error };\n};\n\nexport const validateAll = (values, errors) => {\n  let newError = {};\n\n  Object.keys(values).forEach(key => {\n    let error = validateField(key, values);\n    newError[key] = error[key];\n  });\n\n  return { ...errors, ...newError };\n};\n\nconst validateField = (key, values) => {\n  let errors = {};\n  const isDateField = checkDate(key);\n  const isPhoneField = checkPhone(key);\n  const isSignatureField = checkSignature(key);\n  const isReleaseEmailField = checkReleaseEmail(key);\n  setError(key, values, errors);\n\n  if (isPhoneField) {\n    setPhoneError(key, values, errors);\n  }\n\n  if (isDateField) {\n    setDateError(key, values, errors);\n  }\n\n  if (isReleaseEmailField) {\n    setReleaseEmailError(key, values, errors);\n  }\n\n  if (isSignatureField) {\n    setSignatureError(key, values, errors);\n  }\n\n  return errors;\n};\n\nexport const checkReleaseEmail = key => {\n  const releaseEmail = orderMappings.releaseToEmail;\n\n  return key === releaseEmail;\n};\n\nexport const checkSignature = key => {\n  const isSignature = orderMappings.signature;\n\n  return key === isSignature;\n};\n\nexport const checkTextArea = key => {\n  const textAreaFields = [orderMappings.classDescription]; // fields related to textarea\n\n  return textAreaFields.includes(key);\n};\n\nexport const checkDate = key => {\n  const dateFields = [orderMappings.dob];\n\n  return dateFields.includes(key);\n};\n\nexport const checkPhone = key => {\n  const phoneNumberFields = [orderMappings.phoneNo];\n\n  return phoneNumberFields.includes(key);\n};\n\nexport const setPhoneError = (key, values, errors) => {\n  const isPhoneField = checkPhone(key);\n  if (isPhoneField && values[key]) {\n    const isValid = isValidPhoneNumber(values[key]) && isPossiblePhoneNumber(values[key]);\n    if (!isValid) {\n      return (errors[key] = errorMessages.phoneNo.invalid);\n    }\n\n    return (errors[key] = '');\n  }\n\n  if (isPhoneField && !values[key]) {\n    return (errors[key] = errorMessages.phoneNo.empty);\n  }\n\n  return errors;\n};\n\nexport const setError = (key, values, errors) => {\n  const isReleaseEmail = checkReleaseEmail(key);\n  const isSignature = checkSignature(key);\n  const isClassDescription = checkTextArea(key);\n\n  //check if the input field is empty or not\n  if (!values[key] && !isReleaseEmail && !isSignature) {\n    errors[key] = errorMessages[key];\n\n    return errors;\n  }\n\n  // check if the input contains more than 100 characters except Signature, and Class Description field\n  if (values[key] && !isSignature && !isClassDescription && !validInputLength(values[key])) {\n    errors[key] = errorMessages.length;\n    return errors;\n  }\n\n  // check if input field contains value and not releaseToEmail and signature (multiple error types)\n  if (values[key] && !isReleaseEmail & !isSignature) {\n    errors[key] = '';\n\n    return errors;\n  }\n\n  return errors;\n};\n\nexport const setReleaseEmailError = (key, values, errors) => {\n  const isReleaseEmail = checkReleaseEmail(key);\n  if (!values[key] && isReleaseEmail) {\n    errors[key] = errorMessages[key].empty;\n    return errors;\n  }\n\n  if (values[key] && isReleaseEmail && !validEmail(values[key])) {\n    errors[key] = errorMessages[key].invalid;\n\n    return errors;\n  }\n\n  if (values[key] && isReleaseEmail && validEmail(values[key])) {\n    errors[key] = '';\n  }\n\n  return errors;\n};\n\nexport const setSignatureError = (key, values, errors) => {\n  const isSignature = checkSignature(key);\n  if (values[key] && isSignature) {\n    if (!values[key].base64) {\n      errors[key] = errorMessages[key].empty;\n\n      return errors;\n    }\n\n    if (!validImageType(values[key][orderMappings.type])) {\n      errors[key] = errorMessages[key].invalid;\n\n      return errors;\n    }\n\n    if (!validFileSize(values[key][orderMappings.size])) {\n      errors[key] = errorMessages[key].size;\n\n      return errors;\n    } else {\n      errors[key] = '';\n\n      return errors;\n    }\n  }\n  return errors;\n};\n\nexport const setDateError = (key, values, errors) => {\n  const isDateField = checkDate(key);\n  if (values[key] && isDateField) {\n    const date = new Date(values[key]);\n    const today = new Date();\n    if (today === date) {\n      errors[key] = errorMessages.date.today;\n\n      return errors;\n    }\n\n    if (date > today) {\n      errors[key] = errorMessages.date.future;\n\n      return errors;\n    }\n    return errors;\n  }\n\n  return errors;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/getTimeStamp.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/services/download.js",["422","423"],"import http from 'utils/http';\nimport { endpoints } from 'constants/api';\n\n/**\n * @param  {id} id  => id of the field\n * @return {string} =>  response object\n */\n\nexport const downloadTranscript = async id => {\n  const url = `${endpoints.download}/${id}`;\n  const res = await http.get(url, {\n    responseType: 'blob',\n  });\n\n  return res;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/generateYears.js",["424","425","426","427"],"import { BASE_YEAR } from 'constants/validation';\n\nexport const generateYears = baseYear => {\n  let currentYear = new Date().getFullYear(),\n    years = [];\n  baseYear = baseYear || BASE_YEAR;\n  years = Array.from({ length: currentYear - BASE_YEAR + 1 }, (val, key) => key + BASE_YEAR);\n  return years;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/encode.js",["428"],"export const convertBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.readAsDataURL(file);\n\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n\n    fileReader.onerror = error => {\n      reject(error);\n    };\n  });\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/isEmpty.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/services/district.js",["429","430","431","432","433","434"],"import http from 'utils/http';\nimport { endpoints } from 'constants/api';\n\n//fetch all the disticts name from api\n/**\n * @return  {promise} => list of the distircts\n *\n */\nexport const getDistricts = async () => {\n  const url = endpoints.districts;\n  return await http.get(url);\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/api.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/validate.js",["435","436","437","438"],"import { IMAGE_SIZE_LIMIT, CHARACTER_LIMIT } from 'constants/validation';\n\nexport const validImageType = type => {\n  const imageReg = /[/.](jpg|jpeg|png)$/i;\n  return imageReg.test(type);\n};\n\nexport const validFileSize = size => {\n  return size <= IMAGE_SIZE_LIMIT * 1024;\n};\n\nexport const validEmail = email => {\n  const emailReg = RegExp(\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n  );\n\n  return emailReg.test(email);\n};\n\nexport const validInputLength = val => {\n  return val.length <= CHARACTER_LIMIT;\n};\n\nexport const validDate = date => {\n  date = new Date(date);\n  const today = new Date();\n  if (date >= today) {\n    return false;\n  }\n  return true;\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/utils/http.js",["439","440","441","442","443","444","445","446","447"],"import axios from 'axios';\n\nimport config from 'config';\n\nconst BASE_URL = config.baseURI;\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  responseType: 'json',\n});\n\n/**\n * @param {String} url The url for the api requrest (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not include the access-token header\n * @returns {Observable}\n */\nfunction get(url, { params = {}, responseType = 'json', headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    responseType,\n    method: 'get',\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api requrest (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object what will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not include the\n * access-token header\n * @returns {Observable}\n */\n\nfunction post(url, { params = {}, body = {}, headers = {} } = {}) {\n  return instance({\n    url,\n    headers,\n    params,\n    data: body,\n    method: 'post',\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api requrest (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object what will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not include the\n * access-token header\n * @returns {Observable}\n */\n\nfunction put(url, { params = {}, body = {}, headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    data: body,\n    method: 'put',\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api requrest (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object what will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not include the\n * access-token header\n * @returns {Observable}\n */\n\nfunction patch(url, { params = {}, body = {}, headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    data: body,\n    method: 'patch',\n  }).then(response => response.data);\n}\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\n\nfunction remove(url, { params = {} } = {}) {\n  const headers = {};\n\n  return instance({\n    url,\n    headers,\n    params,\n    method: 'delete',\n  }).then(response => response.data);\n}\n\nexport default {\n  get,\n  put,\n  post,\n  patch,\n  delete: remove,\n};\n","/home/prashant/Projects/sdcoe-transcript/web-client/src/constants/error.js",[],"/home/prashant/Projects/sdcoe-transcript/web-client/src/config.js",[],{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","severity":2,"message":"453","line":1,"column":1,"nodeType":"454","messageId":"455","endLine":1,"endColumn":20,"fix":"456"},{"ruleId":"450","severity":2,"message":"457","line":13,"column":1,"nodeType":"458","messageId":"459","endLine":24,"endColumn":2},{"ruleId":"460","severity":2,"message":"461","line":9,"column":24,"nodeType":"462","endLine":9,"endColumn":34},{"ruleId":"460","severity":2,"message":"463","line":9,"column":36,"nodeType":"462","endLine":9,"endColumn":48},{"ruleId":"460","severity":2,"message":"464","line":33,"column":61,"nodeType":"465","endLine":33,"endColumn":66},{"ruleId":"460","severity":2,"message":"466","line":34,"column":60,"nodeType":"465","endLine":34,"endColumn":67},{"ruleId":"467","severity":2,"message":"468","line":44,"column":3,"nodeType":"469","messageId":"470","endLine":52,"endColumn":6,"fix":"471"},{"ruleId":"450","severity":2,"message":"457","line":55,"column":16,"nodeType":"458","messageId":"459","endLine":57,"endColumn":2},{"ruleId":"460","severity":2,"message":"472","line":3,"column":20,"nodeType":"462","endLine":3,"endColumn":27},{"ruleId":"473","severity":2,"message":"474","line":3,"column":20,"nodeType":"465","messageId":"475","endLine":3,"endColumn":27},{"ruleId":"460","severity":2,"message":"476","line":7,"column":11,"nodeType":"462","endLine":7,"endColumn":18},{"ruleId":"460","severity":2,"message":"477","line":7,"column":20,"nodeType":"462","endLine":7,"endColumn":28},{"ruleId":"460","severity":2,"message":"478","line":7,"column":30,"nodeType":"462","endLine":7,"endColumn":41},{"ruleId":"460","severity":2,"message":"479","line":7,"column":43,"nodeType":"462","endLine":7,"endColumn":47},{"ruleId":"467","severity":2,"message":"468","line":8,"column":3,"nodeType":"480","messageId":"470","endLine":32,"endColumn":5,"fix":"481"},{"ruleId":"448","severity":2,"message":"482","line":8,"column":3,"nodeType":"480","messageId":"483","endLine":32,"endColumn":5,"fix":"484"},{"ruleId":"485","severity":2,"message":"486","line":18,"column":28,"nodeType":"487","endLine":19,"endColumn":106},{"ruleId":"460","severity":2,"message":"488","line":19,"column":17,"nodeType":"465","endLine":19,"endColumn":24},{"ruleId":"460","severity":2,"message":"489","line":19,"column":34,"nodeType":"465","endLine":19,"endColumn":57},{"ruleId":"460","severity":2,"message":"490","line":10,"column":18,"nodeType":"462","endLine":10,"endColumn":22},{"ruleId":"460","severity":2,"message":"491","line":10,"column":24,"nodeType":"462","endLine":10,"endColumn":35},{"ruleId":"460","severity":2,"message":"492","line":11,"column":42,"nodeType":"465","endLine":11,"endColumn":55},{"ruleId":"493","severity":2,"message":"494","line":12,"column":7,"nodeType":"465","messageId":"495","endLine":12,"endColumn":21,"fix":"496"},{"ruleId":"467","severity":2,"message":"468","line":13,"column":3,"nodeType":"480","messageId":"470","endLine":67,"endColumn":5,"fix":"497"},{"ruleId":"448","severity":2,"message":"482","line":13,"column":3,"nodeType":"480","messageId":"483","endLine":67,"endColumn":5,"fix":"498"},{"ruleId":"499","severity":2,"message":"500","line":15,"column":12,"nodeType":"501","endLine":15,"endColumn":44,"fix":"502"},{"ruleId":"460","severity":2,"message":"503","line":6,"column":22,"nodeType":"462","endLine":6,"endColumn":28},{"ruleId":"460","severity":2,"message":"504","line":8,"column":24,"nodeType":"465","endLine":8,"endColumn":35},{"ruleId":"467","severity":2,"message":"468","line":9,"column":3,"nodeType":"505","messageId":"470","endLine":38,"endColumn":4,"fix":"506"},{"ruleId":"448","severity":2,"message":"482","line":39,"column":3,"nodeType":"480","messageId":"483","endLine":46,"endColumn":5,"fix":"507"},{"ruleId":"508","severity":2,"message":"509","line":22,"column":7,"nodeType":"465","messageId":"510","endLine":22,"endColumn":17},{"ruleId":"493","severity":2,"message":"511","line":22,"column":7,"nodeType":"465","messageId":"495","endLine":22,"endColumn":17,"fix":"512"},{"ruleId":"448","severity":2,"message":"482","line":37,"column":7,"nodeType":"480","messageId":"483","endLine":45,"endColumn":9,"fix":"513"},{"ruleId":"460","severity":2,"message":"514","line":51,"column":11,"nodeType":"462","endLine":51,"endColumn":17},{"ruleId":"460","severity":2,"message":"503","line":51,"column":28,"nodeType":"465","endLine":51,"endColumn":34},{"ruleId":"467","severity":2,"message":"468","line":52,"column":3,"nodeType":"480","messageId":"470","endLine":73,"endColumn":5,"fix":"515"},{"ruleId":"448","severity":2,"message":"482","line":52,"column":3,"nodeType":"480","messageId":"483","endLine":73,"endColumn":5,"fix":"516"},{"ruleId":"460","severity":2,"message":"517","line":8,"column":18,"nodeType":"462","endLine":8,"endColumn":25},{"ruleId":"460","severity":2,"message":"490","line":8,"column":27,"nodeType":"462","endLine":8,"endColumn":31},{"ruleId":"460","severity":2,"message":"518","line":8,"column":33,"nodeType":"462","endLine":8,"endColumn":50},{"ruleId":"460","severity":2,"message":"519","line":8,"column":52,"nodeType":"462","endLine":8,"endColumn":57},{"ruleId":"460","severity":2,"message":"520","line":8,"column":59,"nodeType":"462","endLine":8,"endColumn":68},{"ruleId":"467","severity":2,"message":"468","line":69,"column":5,"nodeType":"469","messageId":"470","endLine":69,"endColumn":25,"fix":"521"},{"ruleId":"493","severity":2,"message":"522","line":77,"column":7,"nodeType":"465","messageId":"495","endLine":77,"endColumn":19,"fix":"523"},{"ruleId":"524","severity":2,"message":"525","line":89,"column":15,"nodeType":"526","endLine":95,"endColumn":20},{"ruleId":"524","severity":2,"message":"525","line":91,"column":19,"nodeType":"526","endLine":93,"endColumn":24},{"ruleId":"448","severity":2,"message":"482","line":108,"column":17,"nodeType":"480","messageId":"483","endLine":127,"endColumn":19,"fix":"527"},{"ruleId":"524","severity":2,"message":"525","line":109,"column":19,"nodeType":"526","endLine":126,"endColumn":24},{"ruleId":"524","severity":2,"message":"525","line":112,"column":25,"nodeType":"526","endLine":123,"endColumn":30},{"ruleId":"460","severity":2,"message":"528","line":4,"column":25,"nodeType":"462","endLine":4,"endColumn":31},{"ruleId":"460","severity":2,"message":"529","line":4,"column":33,"nodeType":"462","endLine":4,"endColumn":42},{"ruleId":"460","severity":2,"message":"478","line":4,"column":44,"nodeType":"462","endLine":4,"endColumn":55},{"ruleId":"467","severity":2,"message":"468","line":9,"column":3,"nodeType":"480","messageId":"470","endLine":32,"endColumn":5,"fix":"530"},{"ruleId":"448","severity":2,"message":"482","line":9,"column":3,"nodeType":"480","messageId":"483","endLine":32,"endColumn":5,"fix":"531"},{"ruleId":"467","severity":2,"message":"468","line":34,"column":1,"nodeType":"532","messageId":"470","endLine":34,"endColumn":29,"fix":"533"},{"ruleId":"460","severity":2,"message":"534","line":5,"column":27,"nodeType":"462","endLine":5,"endColumn":34},{"ruleId":"467","severity":2,"message":"468","line":23,"column":3,"nodeType":"469","messageId":"470","endLine":42,"endColumn":6,"fix":"535"},{"ruleId":"467","severity":2,"message":"468","line":46,"column":5,"nodeType":"536","messageId":"470","endLine":48,"endColumn":6,"fix":"537"},{"ruleId":"467","severity":2,"message":"468","line":22,"column":7,"nodeType":"469","messageId":"470","endLine":22,"endColumn":36,"fix":"538"},{"ruleId":"467","severity":2,"message":"468","line":25,"column":5,"nodeType":"469","messageId":"470","endLine":25,"endColumn":20,"fix":"539"},{"ruleId":"467","severity":2,"message":"468","line":22,"column":7,"nodeType":"469","messageId":"470","endLine":22,"endColumn":36,"fix":"540"},{"ruleId":"467","severity":2,"message":"468","line":25,"column":5,"nodeType":"469","messageId":"470","endLine":25,"endColumn":20,"fix":"541"},{"ruleId":"467","severity":2,"message":"468","line":21,"column":3,"nodeType":"469","messageId":"470","endLine":27,"endColumn":6,"fix":"542"},{"ruleId":"467","severity":2,"message":"468","line":31,"column":5,"nodeType":"536","messageId":"470","endLine":33,"endColumn":6,"fix":"543"},{"ruleId":"544","severity":2,"message":"545","line":89,"column":22,"nodeType":"546"},{"ruleId":"544","severity":2,"message":"545","line":104,"column":22,"nodeType":"546"},{"ruleId":"467","severity":2,"message":"468","line":47,"column":5,"nodeType":"469","messageId":"470","endLine":47,"endColumn":21,"fix":"547"},{"ruleId":"493","severity":2,"message":"548","line":2,"column":7,"nodeType":"465","messageId":"495","endLine":2,"endColumn":11,"fix":"549"},{"ruleId":"493","severity":2,"message":"550","line":3,"column":7,"nodeType":"465","messageId":"495","endLine":3,"endColumn":14,"fix":"551"},{"ruleId":"493","severity":2,"message":"552","line":6,"column":7,"nodeType":"465","messageId":"495","endLine":6,"endColumn":11,"fix":"553"},{"ruleId":"467","severity":2,"message":"468","line":7,"column":3,"nodeType":"469","messageId":"470","endLine":7,"endColumn":29,"fix":"554"},{"ruleId":"448","severity":2,"message":"482","line":12,"column":3,"nodeType":"480","messageId":"483","endLine":12,"endColumn":58,"fix":"555"},{"ruleId":"448","severity":2,"message":"482","line":19,"column":3,"nodeType":"480","messageId":"483","endLine":19,"endColumn":16,"fix":"556"},{"ruleId":"467","severity":2,"message":"468","line":47,"column":3,"nodeType":"469","messageId":"470","endLine":49,"endColumn":6,"fix":"557"},{"ruleId":"448","severity":2,"message":"482","line":50,"column":3,"nodeType":"480","messageId":"483","endLine":50,"endColumn":24,"fix":"558"},{"ruleId":"450","severity":2,"message":"457","line":8,"column":8,"nodeType":"458","messageId":"459","endLine":39,"endColumn":2},{"ruleId":"450","severity":2,"message":"457","line":41,"column":8,"nodeType":"458","messageId":"459","endLine":43,"endColumn":2},{"ruleId":"450","severity":2,"message":"457","line":45,"column":8,"nodeType":"458","messageId":"459","endLine":47,"endColumn":2},{"ruleId":"450","severity":2,"message":"457","line":49,"column":8,"nodeType":"458","messageId":"459","endLine":51,"endColumn":2},{"ruleId":"485","severity":2,"message":"486","line":21,"column":11,"nodeType":"487","endLine":28,"endColumn":8},{"ruleId":"460","severity":2,"message":"559","line":21,"column":14,"nodeType":"462","endLine":21,"endColumn":19},{"ruleId":"460","severity":2,"message":"560","line":21,"column":21,"nodeType":"462","endLine":21,"endColumn":38},{"ruleId":"460","severity":2,"message":"561","line":21,"column":28,"nodeType":"462","endLine":21,"endColumn":36},{"ruleId":"485","severity":2,"message":"486","line":40,"column":11,"nodeType":"487","endLine":40,"endColumn":80},{"ruleId":"460","severity":2,"message":"559","line":40,"column":37,"nodeType":"465","endLine":40,"endColumn":42},{"ruleId":"485","severity":2,"message":"486","line":45,"column":11,"nodeType":"487","endLine":45,"endColumn":54},{"ruleId":"460","severity":2,"message":"559","line":45,"column":45,"nodeType":"465","endLine":45,"endColumn":50},{"ruleId":"485","severity":2,"message":"486","line":50,"column":11,"nodeType":"487","endLine":58,"endColumn":6},{"ruleId":"460","severity":2,"message":"560","line":52,"column":23,"nodeType":"465","endLine":52,"endColumn":26},{"ruleId":"460","severity":2,"message":"562","line":52,"column":27,"nodeType":"465","endLine":52,"endColumn":33},{"ruleId":"460","severity":2,"message":"563","line":52,"column":34,"nodeType":"465","endLine":52,"endColumn":40},{"ruleId":"485","severity":2,"message":"486","line":69,"column":11,"nodeType":"487","endLine":76,"endColumn":8},{"ruleId":"460","severity":2,"message":"559","line":69,"column":14,"nodeType":"462","endLine":69,"endColumn":19},{"ruleId":"460","severity":2,"message":"560","line":69,"column":21,"nodeType":"462","endLine":69,"endColumn":38},{"ruleId":"460","severity":2,"message":"561","line":69,"column":28,"nodeType":"462","endLine":69,"endColumn":36},{"ruleId":"485","severity":2,"message":"486","line":90,"column":11,"nodeType":"487","endLine":90,"endColumn":68},{"ruleId":"460","severity":2,"message":"559","line":90,"column":26,"nodeType":"465","endLine":90,"endColumn":31},{"ruleId":"485","severity":2,"message":"486","line":98,"column":11,"nodeType":"487","endLine":98,"endColumn":80},{"ruleId":"460","severity":2,"message":"559","line":98,"column":37,"nodeType":"465","endLine":98,"endColumn":42},{"ruleId":"485","severity":2,"message":"486","line":103,"column":11,"nodeType":"487","endLine":103,"endColumn":54},{"ruleId":"460","severity":2,"message":"559","line":103,"column":45,"nodeType":"465","endLine":103,"endColumn":50},{"ruleId":"485","severity":2,"message":"486","line":108,"column":11,"nodeType":"487","endLine":116,"endColumn":6},{"ruleId":"460","severity":2,"message":"560","line":110,"column":23,"nodeType":"465","endLine":110,"endColumn":26},{"ruleId":"460","severity":2,"message":"562","line":110,"column":27,"nodeType":"465","endLine":110,"endColumn":33},{"ruleId":"460","severity":2,"message":"563","line":110,"column":34,"nodeType":"465","endLine":110,"endColumn":40},{"ruleId":"467","severity":2,"message":"468","line":21,"column":7,"nodeType":"536","messageId":"470","endLine":30,"endColumn":8,"fix":"564"},{"ruleId":"467","severity":2,"message":"468","line":27,"column":9,"nodeType":"469","messageId":"470","endLine":27,"endColumn":33,"fix":"565"},{"ruleId":"448","severity":2,"message":"482","line":29,"column":9,"nodeType":"480","messageId":"483","endLine":29,"endColumn":16,"fix":"566"},{"ruleId":"448","severity":2,"message":"482","line":39,"column":7,"nodeType":"480","messageId":"483","endLine":39,"endColumn":14,"fix":"567"},{"ruleId":"467","severity":2,"message":"468","line":48,"column":7,"nodeType":"469","messageId":"470","endLine":48,"endColumn":31,"fix":"568"},{"ruleId":"448","severity":2,"message":"482","line":50,"column":7,"nodeType":"480","messageId":"483","endLine":50,"endColumn":14,"fix":"569"},{"ruleId":"493","severity":2,"message":"570","line":78,"column":9,"nodeType":"465","messageId":"495","endLine":78,"endColumn":15,"fix":"571"},{"ruleId":"493","severity":2,"message":"572","line":92,"column":9,"nodeType":"465","messageId":"495","endLine":92,"endColumn":15,"fix":"573"},{"ruleId":"467","severity":2,"message":"468","line":93,"column":5,"nodeType":"536","messageId":"470","endLine":100,"endColumn":6,"fix":"574"},{"ruleId":"467","severity":2,"message":"468","line":119,"column":5,"nodeType":"536","messageId":"470","endLine":121,"endColumn":6,"fix":"575"},{"ruleId":"452","severity":2,"message":"453","line":124,"column":5,"nodeType":"454","messageId":"455","endLine":124,"endColumn":41,"fix":"576"},{"ruleId":"467","severity":2,"message":"468","line":125,"column":5,"nodeType":"536","messageId":"470","endLine":128,"endColumn":6,"fix":"577"},{"ruleId":"467","severity":2,"message":"468","line":127,"column":7,"nodeType":"469","messageId":"470","endLine":127,"endColumn":41,"fix":"578"},{"ruleId":"467","severity":2,"message":"468","line":132,"column":7,"nodeType":"469","messageId":"470","endLine":132,"endColumn":43,"fix":"579"},{"ruleId":"467","severity":2,"message":"468","line":7,"column":3,"nodeType":"469","messageId":"470","endLine":13,"endColumn":10,"fix":"580"},{"ruleId":"467","severity":2,"message":"468","line":10,"column":7,"nodeType":"469","messageId":"470","endLine":10,"endColumn":21,"fix":"581"},{"ruleId":"467","severity":2,"message":"468","line":12,"column":5,"nodeType":"469","messageId":"470","endLine":12,"endColumn":24,"fix":"582"},{"ruleId":"467","severity":2,"message":"468","line":16,"column":3,"nodeType":"469","messageId":"470","endLine":20,"endColumn":8,"fix":"583"},{"ruleId":"584","severity":2,"message":"585","line":5,"column":null,"nodeType":"586","endLine":5,"endColumn":null,"fix":"587"},{"ruleId":"588","severity":2,"message":"589","line":5,"column":null,"nodeType":"586","endLine":5,"endColumn":null,"fix":"590"},{"ruleId":"588","severity":2,"message":"591","line":5,"column":null,"nodeType":"586","endLine":5,"endColumn":null,"fix":"592"},{"ruleId":"593","severity":2,"message":"594","line":12,"column":10,"nodeType":"465","messageId":"595","endLine":12,"endColumn":46},{"ruleId":"584","severity":2,"message":"585","line":16,"column":null,"nodeType":"586","endLine":16,"endColumn":null,"fix":"596"},{"ruleId":"588","severity":2,"message":"589","line":16,"column":null,"nodeType":"586","endLine":16,"endColumn":null,"fix":"597"},{"ruleId":"588","severity":2,"message":"591","line":16,"column":null,"nodeType":"586","endLine":16,"endColumn":null,"fix":"598"},{"ruleId":"599","severity":2,"message":"600","line":17,"column":null,"nodeType":"586","endLine":17,"endColumn":null,"fix":"601"},{"ruleId":"588","severity":2,"message":"591","line":26,"column":null,"nodeType":"586","endLine":26,"endColumn":null,"fix":"602"},{"ruleId":"599","severity":2,"message":"600","line":28,"column":null,"nodeType":"586","endLine":28,"endColumn":null,"fix":"603"},{"ruleId":"493","severity":2,"message":"604","line":32,"column":7,"nodeType":"465","messageId":"495","endLine":32,"endColumn":11,"fix":"605"},{"ruleId":"588","severity":2,"message":"591","line":41,"column":null,"nodeType":"586","endLine":41,"endColumn":null,"fix":"606"},{"ruleId":"599","severity":2,"message":"600","line":43,"column":null,"nodeType":"586","endLine":43,"endColumn":null,"fix":"607"},{"ruleId":"493","severity":2,"message":"604","line":47,"column":7,"nodeType":"465","messageId":"495","endLine":47,"endColumn":11,"fix":"608"},{"ruleId":"588","severity":2,"message":"591","line":56,"column":null,"nodeType":"586","endLine":56,"endColumn":null,"fix":"609"},{"ruleId":"599","severity":2,"message":"600","line":58,"column":null,"nodeType":"586","endLine":58,"endColumn":null,"fix":"610"},{"ruleId":"493","severity":2,"message":"604","line":62,"column":7,"nodeType":"465","messageId":"495","endLine":62,"endColumn":11,"fix":"611"},{"ruleId":"493","severity":2,"message":"612","line":12,"column":7,"nodeType":"465","messageId":"495","endLine":12,"endColumn":12,"fix":"613"},{"ruleId":"467","severity":2,"message":"468","line":13,"column":3,"nodeType":"536","messageId":"470","endLine":15,"endColumn":4,"fix":"614"},{"ruleId":"448","severity":2,"message":"482","line":16,"column":3,"nodeType":"480","messageId":"483","endLine":16,"endColumn":39,"fix":"615"},{"ruleId":"493","severity":2,"message":"616","line":20,"column":7,"nodeType":"465","messageId":"495","endLine":20,"endColumn":15,"fix":"617"},{"ruleId":"493","severity":2,"message":"612","line":23,"column":9,"nodeType":"465","messageId":"495","endLine":23,"endColumn":14,"fix":"618"},{"ruleId":"467","severity":2,"message":"468","line":24,"column":5,"nodeType":"469","messageId":"470","endLine":24,"endColumn":32,"fix":"619"},{"ruleId":"493","severity":2,"message":"620","line":31,"column":7,"nodeType":"465","messageId":"495","endLine":31,"endColumn":13,"fix":"621"},{"ruleId":"467","severity":2,"message":"468","line":36,"column":3,"nodeType":"469","messageId":"470","endLine":36,"endColumn":33,"fix":"622"},{"ruleId":"467","severity":2,"message":"468","line":89,"column":3,"nodeType":"536","messageId":"470","endLine":96,"endColumn":4,"fix":"623"},{"ruleId":"467","severity":2,"message":"468","line":91,"column":5,"nodeType":"536","messageId":"470","endLine":93,"endColumn":6,"fix":"624"},{"ruleId":"452","severity":2,"message":"453","line":110,"column":3,"nodeType":"454","messageId":"455","endLine":110,"endColumn":45,"fix":"625"},{"ruleId":"448","severity":2,"message":"482","line":120,"column":5,"nodeType":"480","messageId":"483","endLine":120,"endColumn":19,"fix":"626"},{"ruleId":"467","severity":2,"message":"468","line":135,"column":3,"nodeType":"536","messageId":"470","endLine":138,"endColumn":4,"fix":"627"},{"ruleId":"448","severity":2,"message":"482","line":137,"column":5,"nodeType":"480","messageId":"483","endLine":137,"endColumn":19,"fix":"628"},{"ruleId":"467","severity":2,"message":"468","line":155,"column":3,"nodeType":"536","messageId":"470","endLine":177,"endColumn":4,"fix":"629"},{"ruleId":"448","severity":2,"message":"482","line":178,"column":3,"nodeType":"480","messageId":"483","endLine":178,"endColumn":17,"fix":"630"},{"ruleId":"467","severity":2,"message":"468","line":183,"column":3,"nodeType":"536","messageId":"470","endLine":198,"endColumn":4,"fix":"631"},{"ruleId":"467","severity":2,"message":"468","line":186,"column":5,"nodeType":"536","messageId":"470","endLine":190,"endColumn":6,"fix":"632"},{"ruleId":"448","severity":2,"message":"482","line":197,"column":5,"nodeType":"480","messageId":"483","endLine":197,"endColumn":19,"fix":"633"},{"ruleId":"588","severity":2,"message":"591","line":5,"column":null,"nodeType":"586","endLine":5,"endColumn":null,"fix":"634"},{"ruleId":"599","severity":2,"message":"600","line":6,"column":null,"nodeType":"586","endLine":6,"endColumn":null,"fix":"635"},{"ruleId":"493","severity":2,"message":"636","line":4,"column":7,"nodeType":"465","messageId":"495","endLine":4,"endColumn":18},{"ruleId":"467","severity":2,"message":"468","line":6,"column":3,"nodeType":"469","messageId":"470","endLine":6,"endColumn":36,"fix":"637"},{"ruleId":"473","severity":2,"message":"638","line":6,"column":14,"nodeType":"465","messageId":"475","endLine":6,"endColumn":22},{"ruleId":"448","severity":2,"message":"482","line":8,"column":3,"nodeType":"480","messageId":"483","endLine":8,"endColumn":16,"fix":"639"},{"ruleId":"467","severity":2,"message":"468","line":4,"column":5,"nodeType":"469","messageId":"470","endLine":4,"endColumn":36,"fix":"640"},{"ruleId":"452","severity":2,"message":"453","line":4,"column":1,"nodeType":"454","messageId":"455","endLine":4,"endColumn":39,"fix":"641"},{"ruleId":"599","severity":2,"message":"600","line":6,"column":null,"nodeType":"586","endLine":6,"endColumn":null,"fix":"642"},{"ruleId":"588","severity":2,"message":"591","line":6,"column":null,"nodeType":"586","endLine":6,"endColumn":null,"fix":"643"},{"ruleId":"467","severity":2,"message":"468","line":11,"column":3,"nodeType":"480","messageId":"470","endLine":11,"endColumn":30,"fix":"644"},{"ruleId":"448","severity":2,"message":"482","line":11,"column":3,"nodeType":"480","messageId":"483","endLine":11,"endColumn":30,"fix":"645"},{"ruleId":"593","severity":2,"message":"594","line":11,"column":10,"nodeType":"465","messageId":"595","endLine":11,"endColumn":29},{"ruleId":"467","severity":2,"message":"468","line":5,"column":3,"nodeType":"480","messageId":"470","endLine":5,"endColumn":30,"fix":"646"},{"ruleId":"448","severity":2,"message":"482","line":5,"column":3,"nodeType":"480","messageId":"483","endLine":5,"endColumn":30,"fix":"647"},{"ruleId":"467","severity":2,"message":"468","line":27,"column":3,"nodeType":"536","messageId":"470","endLine":29,"endColumn":4,"fix":"648"},{"ruleId":"448","severity":2,"message":"482","line":30,"column":3,"nodeType":"480","messageId":"483","endLine":30,"endColumn":15,"fix":"649"},{"ruleId":"588","severity":2,"message":"591","line":13,"column":null,"nodeType":"586","endLine":13,"endColumn":null,"fix":"650"},{"ruleId":"588","severity":2,"message":"591","line":31,"column":null,"nodeType":"586","endLine":31,"endColumn":null,"fix":"651"},{"ruleId":"450","severity":2,"message":"457","line":42,"column":1,"nodeType":"458","messageId":"459","endLine":50,"endColumn":2},{"ruleId":"588","severity":2,"message":"591","line":53,"column":null,"nodeType":"586","endLine":53,"endColumn":null,"fix":"652"},{"ruleId":"450","severity":2,"message":"457","line":64,"column":1,"nodeType":"458","messageId":"459","endLine":72,"endColumn":2},{"ruleId":"588","severity":2,"message":"591","line":75,"column":null,"nodeType":"586","endLine":75,"endColumn":null,"fix":"653"},{"ruleId":"450","severity":2,"message":"457","line":86,"column":1,"nodeType":"458","messageId":"459","endLine":94,"endColumn":2},{"ruleId":"588","severity":2,"message":"591","line":97,"column":null,"nodeType":"586","endLine":97,"endColumn":null,"fix":"654"},{"ruleId":"450","severity":2,"message":"457","line":106,"column":1,"nodeType":"458","messageId":"459","endLine":115,"endColumn":2},"newline-before-return",["467"],"require-jsdoc",[],"spaced-comment","Expected space or tab after '//' in comment.","Line","expectedSpaceAfter",{"range":"655","text":"656"},"Missing JSDoc comment.","FunctionDeclaration","missingJSDocComment","react/prop-types","'statusType' is missing in props validation","Property","'toastMessage' is missing in props validation","'toastMessage.title' is missing in props validation","Identifier","'toastMessage.message' is missing in props validation","padding-line-between-statements","Expected blank line before this statement.","ExpressionStatement","expectedBlankLine",{"range":"657","text":"658"},"'message' is missing in props validation","no-unused-vars","'message' is defined but never used. Allowed unused args must match /next/u.","unusedVar","'options' is missing in props validation","'onChange' is missing in props validation","'placeholder' is missing in props validation","'name' is missing in props validation","ReturnStatement",{"range":"659","text":"658"},"Expected newline before return statement.","expected",{"range":"660","text":"658"},"react/display-name","Component definition is missing display name","ArrowFunctionExpression","'isMulti' is missing in props validation","'customDropdownIndicator' is missing in props validation","'data' is missing in props validation","'handleClick' is missing in props validation","'data.requestedType' is missing in props validation","prefer-const","'requestDetails' is never reassigned. Use 'const' instead.","useConst",{"range":"661","text":"662"},{"range":"663","text":"658"},{"range":"664","text":"658"},"react/no-unknown-property","Unknown property 'class' found, use 'className' instead","JSXAttribute",{"range":"665","text":"666"},"'status' is missing in props validation","'status.toLowerCase' is missing in props validation","SwitchStatement",{"range":"667","text":"658"},{"range":"668","text":"658"},"camelcase","Identifier 'status_key' is not in camel case.","notCamelCase","'status_key' is never reassigned. Use 'const' instead.",{"range":"669","text":"662"},{"range":"670","text":"658"},"'status.status' is missing in props validation",{"range":"671","text":"658"},{"range":"672","text":"658"},"'columns' is missing in props validation","'searchPlaceholder' is missing in props validation","'title' is missing in props validation","'isLoading' is missing in props validation",{"range":"673","text":"658"},"'isInputError' is never reassigned. Use 'const' instead.",{"range":"674","text":"662"},"react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement",{"range":"675","text":"658"},"'filter' is missing in props validation","'setFilter' is missing in props validation",{"range":"676","text":"658"},{"range":"677","text":"658"},"ExportDefaultDeclaration",{"range":"678","text":"658"},"'onClick' is missing in props validation",{"range":"679","text":"658"},"IfStatement",{"range":"680","text":"658"},{"range":"681","text":"658"},{"range":"682","text":"658"},{"range":"683","text":"658"},{"range":"684","text":"658"},{"range":"685","text":"658"},{"range":"686","text":"658"},"react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","Literal",{"range":"687","text":"658"},"'date' is never reassigned. Use 'const' instead.",{"range":"688","text":"662"},"'newDate' is never reassigned. Use 'const' instead.",{"range":"689","text":"662"},"'year' is never reassigned. Use 'const' instead.",{"range":"690","text":"662"},{"range":"691","text":"658"},{"range":"692","text":"658"},{"range":"693","text":"658"},{"range":"694","text":"658"},{"range":"695","text":"658"},"'value' is missing in props validation","'row' is missing in props validation","'row.original' is missing in props validation","'row.values' is missing in props validation","'row.values.status' is missing in props validation",{"range":"696","text":"658"},{"range":"697","text":"658"},{"range":"698","text":"658"},{"range":"699","text":"658"},{"range":"700","text":"658"},{"range":"701","text":"658"},"'base64' is never reassigned. Use 'const' instead.",{"range":"702","text":"662"},"'values' is never reassigned. Use 'const' instead.",{"range":"703","text":"662"},{"range":"704","text":"658"},{"range":"705","text":"658"},{"range":"706","text":"656"},{"range":"707","text":"658"},{"range":"708","text":"658"},{"range":"709","text":"658"},{"range":"710","text":"658"},{"range":"711","text":"658"},{"range":"712","text":"658"},{"range":"713","text":"658"},"jsdoc/newline-after-description","There must be a newline after the description of the JSDoc block.","Block",{"range":"714","text":"715"},"jsdoc/require-description-complete-sentence","Sentence should start with an uppercase character.",{"range":"714","text":"716"},"Sentence must end with a period.",{"range":"714","text":"716"},"no-return-await","Redundant use of `await` on a return value.","redundantUseOfAwait",{"range":"717","text":"718"},{"range":"717","text":"719"},{"range":"717","text":"719"},"jsdoc/check-tag-names","Invalid JSDoc tag (preference). Replace \"return\" JSDoc tag with \"returns\".",{"range":"717","text":"720"},{"range":"721","text":"722"},{"range":"721","text":"723"},"'data' is never reassigned. Use 'const' instead.",{"range":"724","text":"662"},{"range":"725","text":"726"},{"range":"725","text":"727"},{"range":"728","text":"662"},{"range":"729","text":"726"},{"range":"729","text":"727"},{"range":"730","text":"662"},"'error' is never reassigned. Use 'const' instead.",{"range":"731","text":"662"},{"range":"732","text":"658"},{"range":"733","text":"658"},"'newError' is never reassigned. Use 'const' instead.",{"range":"734","text":"662"},{"range":"735","text":"662"},{"range":"736","text":"658"},"'errors' is never reassigned. Use 'const' instead.",{"range":"737","text":"662"},{"range":"738","text":"658"},{"range":"739","text":"658"},{"range":"740","text":"658"},{"range":"741","text":"656"},{"range":"742","text":"658"},{"range":"743","text":"658"},{"range":"744","text":"658"},{"range":"745","text":"658"},{"range":"746","text":"658"},{"range":"747","text":"658"},{"range":"748","text":"658"},{"range":"749","text":"658"},{"range":"750","text":"751"},{"range":"750","text":"752"},"'currentYear' is never reassigned. Use 'const' instead.",{"range":"753","text":"658"},"'baseYear' is assigned a value but never used.",{"range":"754","text":"658"},{"range":"755","text":"658"},{"range":"756","text":"656"},{"range":"757","text":"758"},{"range":"757","text":"759"},{"range":"760","text":"658"},{"range":"761","text":"658"},{"range":"762","text":"658"},{"range":"763","text":"658"},{"range":"764","text":"658"},{"range":"765","text":"658"},{"range":"766","text":"767"},{"range":"768","text":"769"},{"range":"770","text":"769"},{"range":"771","text":"769"},{"range":"772","text":"773"},[2,2]," ",[1189,1189],"\n",[191,191],[194,194],[417,420],"const",[467,467],[470,470],[497,502],"className",[252,252],[758,758],[605,608],[1054,1054],[1396,1396],[1399,1399],[1803,1803],[1930,1933],[3078,3078],[292,292],[295,295],[1219,1219],[749,749],[1353,1353],[772,772],[842,842],[779,779],[849,849],[641,641],[951,951],[1332,1332],[61,64],[121,124],[222,225],[255,255],[389,389],[540,540],[1995,1995],[2093,2093],[759,759],[928,928],[1031,1031],[1225,1225],[1383,1383],[1480,1480],[2114,2117],[2415,2418],[2437,2437],[3282,3282],[3466,3466],[3459,3459],[3664,3664],[3882,3882],[164,164],[268,268],[296,296],[376,376],[75,206],"/**\n * request a transcript by student\n *\n * @param  {object} data => form data\n * @returns {promise} => transcript order response\n */","/**\n * Request a transcript by student.\n * @param  {object} data => form data\n * @returns {promise} => transcript order response\n */",[340,425],"/**\n * get all the requested transcript list\n *\n * @return {string} response message\n */","/**\n * Get all the requested transcript list.\n * @return {string} response message\n */","/**\n * get all the requested transcript list\n * @returns {string} response message\n */",[570,713],"/**\n * @param  {status} status => value of the status field.\n * @param  {id} id  => id of the field\n * @return {string} =>  response message\n */","/**\n * @param  {status} status => value of the status field\n * @param  {id} id  => id of the field\n * @returns {string} =>  response message\n */",[812,815],[934,1079],"/**\n * @param {status} status => value of the status field.\n * @param  {id} id => id of the field\n * @return {string} => Request deny response\n */","/**\n * @param {status} status => value of the status field\n * @param  {id} id => id of the field\n * @returns {string} => Request deny response\n */",[1176,1179],[1298,1443],[1545,1548],[455,458],[494,494],[643,643],[735,738],[798,801],[837,837],[961,964],[1157,1157],[2270,2270],[2398,2398],[2839,2839],[3242,3242],[3597,3597],[3686,3686],[4060,4060],[4537,4537],[4648,4648],[4754,4754],[4959,4959],[75,161],"/**\n * @param  {id} id  => id of the field.\n * @return {string} =>  response object\n */","/**\n * @param  {id} id  => id of the field\n * @returns {string} =>  response object\n */",[155,155],[288,288],[123,123],[77,77],[114,171],"/**\n * @returns  {promise} => list of the distircts\n *\n */","/**\n * @return  {promise} => list of the distircts.\n *\n */",[248,248],[251,251],[157,157],[160,160],[695,695],[743,743],[174,482],"/**\n * @param {String} url The url for the api requrest (without the base).\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not include the access-token header\n * @returns {Observable}\n */",[694,1089],"/**\n * @param {String} url The url for the api requrest (without the base).\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Object} [config.body] An object what will be sent in the request\n * body\n * @param {Boolean} [config.accessToken] Whether or not include the\n * access-token header\n * @returns {Observable}\n */",[1290,1685],[1884,2279],[2482,2795],"/**\n * @param {String} url The url for the api request (without the base).\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */"]